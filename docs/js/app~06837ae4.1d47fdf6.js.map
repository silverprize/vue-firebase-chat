{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/session/mutations.type.ts","webpack:///./src/store/session/index.ts","webpack:///./src/store/chat/mutations.type.ts","webpack:///./src/store/chat/index.ts","webpack:///./src/store/dialog/index.ts","webpack:///./src/store/root/index.ts","webpack:///./src/store/index.ts","webpack:///./src/store/chat/getters.type.ts","webpack:///./src/store/dialog/getters.type.ts","webpack:///./src/store/session/actions.type.ts","webpack:///./src/store/dialog/types.ts","webpack:///./src/store/session/getters.type.ts","webpack:///./src/services/bus/index.ts","webpack:///./src/router/route.name.ts","webpack:///./src/store/root/mutations.type.ts","webpack:///./src/decorators/WithGlobalSpinner.ts","webpack:///./src/services/backend/types.ts","webpack:///./src/services/backend/index.ts","webpack:///./src/store/chat/actions.type.ts","webpack:///./src/store/root/getters.type.ts","webpack:///./src/components/VButton/VButton.tsx","webpack:///./src/store/dialog/actions.type.ts","webpack:///./src/components/VSpinner/VSpinner.tsx","webpack:///./src/components/VModal/VModal.tsx","webpack:///./src/components/DialogMessage/DialogMessage.tsx","webpack:///./src/components/DialogInvitation/DialogInvitation.tsx","webpack:///./src/components/DialogConfirmInvitation/DialogConfirmInvitation.tsx","webpack:///./src/components/DialogContainer/DialogContainer.tsx","webpack:///./src/App.tsx","webpack:///./src/router/main/index.ts","webpack:///./src/router/chat-room/index.ts","webpack:///./src/router/chat-room-list/index.ts","webpack:///./src/router/options.ts","webpack:///./src/router/index.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","jsonpArray","window","oldJsonpFunction","slice","SET_PROFILE","SET_CONNECTED","SET_SIGNED_IN","RESET","sessionModule","state","user","isConnecting","isSignedIn","unsubscribes","getters","mutations","profile","forEach","unsubscribe","actions","context","session","subscribeSessionEvents","id","commit","onAuthChanged","onConnectionChanged","connected","bus","$emit","DISCONNECTED","onInvite","invitation","INVITATION_RECEIVED","SET_ROOMS","SET_PEOPLE","SET_ROOM","CLEAR","ADD_MESSAGE","ADD_USER","REMOVE_USER","IMAGE_UPLOADED","ContentType","SubRoomsKey","SubRoomKey","dummyRoom","order","countPeople","chatModule","rooms","people","messages","room","imageMessageIndices","contentType","Image","index","findIndex","set","delete","subscribeRoomsEvent","unsubscribeEvents","roomId","subscribeRoomEvent","invitee","currentRoom","unsubscribePromise","reduce","arr","createSystemMessage","content","Type","System","Text","sender","createdAt","Date","now","ROOM_UPDATED","USER_JOINED","USER_LEAVE","NEW_MESSAGE","USER_LIST_LOADED","keys","map","dialogModule","MESSAGE","current","queue","INVITATION","CONFIRM_INVITATION","clear","dialogType","params","showMessageDialog","showInvitationDialog","showConfirmInvitationDialog","pop","consumeDialogRequest","dispatch","unshift","usersPromise","users","filter","uid","currentRoomId","handleOk","rootModule","chat","dialog","isBusy","enable","use","store","Store","GET_ROOMS","GET_ROOM_INFO","GET_MESSAGES","GET_PEOPLE","GET_CURRENT_MESSAGE_DIALOG","GET_CURRENT_INVITATION_DIALOG","GET_CURRENT_CONFIRM_INVITATION_DIALOG","SIGN_IN","SIGN_OUT","CHECK_USER_SESSION","DialogType","IS_CONNECTING","IS_SIGNED_IN","IS_VALID","GET_PROFILE","methods","on","listener","handler","this","$on","$off","RouteName","SET_BUSY","factory","options","prop","method","container","args","WithGlobalSpinner","Message","ChatEvent","ServerValue","database","firebaseApp","initializeApp","firebaseAuth","auth","firebaseDatabase","firebaseStorage","storage","checkUserSession","off","onAuthStateChanged","getSessionRef","once","sessionSnapshot","val","signIn","signInAnonymously","getCurrentUser","getSessionsRef","orderByChild","equalTo","refs","exist","ref","online","signOut","update","updateProfile","displayName","remove","dispatchMessage","TIMESTAMP","files","file","getChatRoomRef","child","path","toISOString","join","uploadFile","url","destPath","put","snapshot","getDownloadURL","fetchUsers","snapshots","sendInvitation","getInvitations","inviter","subscribeAuthState","callbackFn","userInfo","toJSON","subscribeInvitation","invitationRef","startAt","subscribeChatRooms","roomsCallbackFn","chatRoomStatesRef","getChatRoomStatesRef","chatRoomsSnapshots","chatRoomSnapshot","subscribeChatRoom","roomCallbackFn","chatRoomUsersRef","getChatRoomUsersRef","userSnapshots","addUserToChatRoom","me","chatRoomStateRef","getChatRoomStateRef","chatRoomUsersQuery","joinedAt","chatRoomMessagesQuery","getChatRoomMessagesRef","roomUsersDisconnection","onDisconnect","roomStateDisconnection","increment","removeUserFromRoom","cancel","subscribeConnectionState","sessionRef","connectionRef","lastChanged","currentUser","getChatRoomsRef","chatRoomUserRef","numChildren","ENTER_LOBBY","LEAVE_LOBBY","ENTER_ROOM","LEAVE_ROOM","DISPATCH_MESSAGE","SEND_INVITATION","IS_BUSY","VButton","styleVariant","buttonType","$listeners","$slots","default","$attrs","variant","String","NEXT_DIALOG","REQUEST_DIALOG","CLEAR_DIALOGS","closeLabel","okLabel","okText","closeText","concat","guest","onOk","chatUser","components","VModal","nextDialog","handleClose","currentInvitationDialog","currentConfirmInvitationDialog","currentMessageDialog","clearDialogs","requestDialog","$router","ChatRoom","main","Main","component","chatRoom","chatRooms","ChatRoomList","routes","redirect","routerOptions","base","router","checkSession","to","from","next","beforeEach","config","productionTip","registerHooks","onError","render","h","$mount"],"mappings":"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","file":"js/app~06837ae4.1d47fdf6.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app~06837ae4\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app~06837ae4\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"main~31ecd969\":\"main~31ecd969\",\"vendors~chat-room~chat-room-list~987e6011\":\"vendors~chat-room~chat-room-list~987e6011\",\"chat-room-list~21833f8f\":\"chat-room-list~21833f8f\",\"vendors~chat-room~d939e436\":\"vendors~chat-room~d939e436\",\"chat-room~21833f8f\":\"chat-room~21833f8f\"}[chunkId]||chunkId) + \".\" + {\"main~31ecd969\":\"42aaeb72\",\"vendors~chat-room~chat-room-list~987e6011\":\"739b3dc6\",\"chat-room-list~21833f8f\":\"f3a7683c\",\"vendors~chat-room~d939e436\":\"7abcce4d\",\"chat-room~21833f8f\":\"4679503e\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"main~31ecd969\":1,\"chat-room-list~21833f8f\":1,\"chat-room~21833f8f\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"main~31ecd969\":\"main~31ecd969\",\"vendors~chat-room~chat-room-list~987e6011\":\"vendors~chat-room~chat-room-list~987e6011\",\"chat-room-list~21833f8f\":\"chat-room-list~21833f8f\",\"vendors~chat-room~d939e436\":\"vendors~chat-room~d939e436\",\"chat-room~21833f8f\":\"chat-room~21833f8f\"}[chunkId]||chunkId) + \".\" + {\"main~31ecd969\":\"15b94d15\",\"vendors~chat-room~chat-room-list~987e6011\":\"31d6cfe0\",\"chat-room-list~21833f8f\":\"52a8c9d7\",\"vendors~chat-room~d939e436\":\"31d6cfe0\",\"chat-room~21833f8f\":\"6b0ced50\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-firebase-chat/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"app~c5b24172\",\"app~8a6c828a\",\"app~7ffa8a2f\",\"app~8b322766\",\"app~1fb195ae\",\"app~c1554789\",\"app~d939e436\",\"app~b58f7129\",\"app~1c3a2c3f\",\"app~d2305125\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const SET_PROFILE = 'session.setProfile'\nexport const SET_CONNECTED = 'session.setConnected'\nexport const SET_SIGNED_IN = 'session.setSignedIn'\nexport const RESET = 'session.clear'\n","import { ActionContext, Module } from 'vuex'\nimport { RESET, SET_CONNECTED, SET_PROFILE, SET_SIGNED_IN } from './mutations.type'\nimport { GET_PROFILE, IS_CONNECTING, IS_SIGNED_IN, IS_VALID } from './getters.type'\nimport { CHECK_USER_SESSION, SIGN_IN, SIGN_OUT } from '@/store/session/actions.type'\nimport { RootState } from '@/store/root'\nimport {\n  ChatEvent,\n  checkUserSession,\n  Profile,\n  signIn,\n  signOut,\n  subscribeAuthState,\n  subscribeConnectionState,\n  subscribeInvitation,\n} from '@/services/backend'\nimport { ConfirmInvitationDialog } from '@/store/dialog/types'\nimport { bus } from '@/services/bus'\n\ninterface State {\n  user: Profile | null;\n  isConnecting: boolean;\n  isSignedIn: boolean;\n  unsubscribes: (() => void)[];\n}\n\nconst sessionModule: Module<State, RootState> = {\n  state: () => ({\n    user: null,\n    isConnecting: false,\n    isSignedIn: false,\n    unsubscribes: [],\n  }),\n  getters: {\n    [IS_CONNECTING]: state => state.isConnecting,\n    [IS_SIGNED_IN]: state => state.isSignedIn,\n    [IS_VALID]: (state, getters) => getters[IS_CONNECTING] && getters[IS_SIGNED_IN],\n    [GET_PROFILE]: state => state.user,\n  },\n  mutations: {\n    [SET_PROFILE](state, profile: Profile) {\n      state.user = profile\n    },\n    [SET_CONNECTED](state, isConnecting: boolean) {\n      state.isConnecting = isConnecting\n    },\n    [SET_SIGNED_IN](state, isSignedIn: boolean) {\n      state.isSignedIn = isSignedIn\n    },\n    [RESET](state) {\n      state.unsubscribes.forEach(unsubscribe => unsubscribe())\n      state.user = null\n      state.isConnecting = false\n      state.isSignedIn = false\n      state.unsubscribes = []\n    },\n  },\n  actions: {\n    async [CHECK_USER_SESSION](context) {\n      const session = await checkUserSession()\n      if (session) {\n        await subscribeSessionEvents(context)\n      } else {\n        throw new Error('Unauthorized')\n      }\n      return session\n    },\n    async [SIGN_IN](context, id) {\n      await signIn(id)\n      await subscribeSessionEvents(context)\n    },\n    async [SIGN_OUT]({ commit }) {\n      await signOut()\n      commit(RESET)\n    },\n  },\n}\n\nfunction subscribeSessionEvents(context: ActionContext<State, RootState>) {\n  const onAuthChanged = (profile: Profile | null) => {\n    if (profile) {\n      context.commit(SET_PROFILE, profile)\n    }\n    context.commit(SET_SIGNED_IN, profile != null)\n  }\n  const onConnectionChanged = (connected: boolean) => {\n    if (context.getters[IS_CONNECTING] && !connected) {\n      bus.$emit(ChatEvent.DISCONNECTED)\n    }\n    context.commit(SET_CONNECTED, connected)\n  }\n  const onInvite = (invitation: ConfirmInvitationDialog.Params) => {\n    bus.$emit(ChatEvent.INVITATION_RECEIVED, invitation)\n  }\n\n  context.commit(RESET)\n  context.state.unsubscribes.push(\n    subscribeInvitation(onInvite),\n    subscribeAuthState(onAuthChanged),\n    subscribeConnectionState(onConnectionChanged),\n  )\n}\n\nexport { sessionModule }\n","export const SET_ROOMS = 'chat.setRooms'\nexport const SET_PEOPLE = 'chat.setPeople'\nexport const SET_ROOM = 'chat.setRoom'\nexport const CLEAR = 'chat.clear'\nexport const ADD_MESSAGE = 'chat.addMessage'\nexport const ADD_USER = 'chat.addUser'\nexport const REMOVE_USER = 'chat.removeUser'\nexport const IMAGE_UPLOADED = 'chat.imageUploaded'\n","import Vue from 'vue'\nimport { ActionContext, Module } from 'vuex'\nimport { v1 as uuid } from 'uuid'\nimport {\n  ADD_MESSAGE,\n  ADD_USER,\n  CLEAR,\n  IMAGE_UPLOADED,\n  REMOVE_USER,\n  SET_PEOPLE,\n  SET_ROOM,\n  SET_ROOMS,\n} from './mutations.type'\nimport { GET_MESSAGES, GET_PEOPLE, GET_ROOM_INFO, GET_ROOMS } from '@/store/chat/getters.type'\nimport {\n  DISPATCH_MESSAGE,\n  ENTER_LOBBY,\n  ENTER_ROOM,\n  LEAVE_LOBBY,\n  LEAVE_ROOM,\n  SEND_INVITATION,\n} from '@/store/chat/actions.type'\nimport { RootState } from '@/store/root'\nimport {\n  ChatEvent,\n  ChatUser,\n  dispatchMessage,\n  Message,\n  Room,\n  sendInvitation,\n  subscribeChatRoom,\n  subscribeChatRooms,\n} from '@/services/backend'\nimport { Dictionary } from '@/types/common'\nimport ContentType = Message.ContentType\n\ninterface State {\n  rooms: Room[];\n  people: ChatUser[];\n  messages: Message[];\n  room: Room;\n  unsubscribes: Dictionary<Promise<() => void>>;\n  imageMessageIndices: Dictionary<number>\n}\n\nconst SubRoomsKey = 'RoomsKey'\nconst SubRoomKey = 'RoomKey'\nconst dummyRoom = { id: '', order: -1, name: '', countPeople: 0 }\nconst chatModule: Module<State, RootState> = {\n  state: () => ({\n    rooms: [],\n    people: [],\n    messages: [],\n    room: dummyRoom,\n    unsubscribes: {},\n    imageMessageIndices: {},\n  }),\n  getters: {\n    [GET_ROOMS]: state => state.rooms,\n    [GET_ROOM_INFO]: state => state.room,\n    [GET_MESSAGES]: state => state.messages,\n    [GET_PEOPLE]: state => state.people,\n  },\n  mutations: {\n    [SET_ROOMS](state, rooms) {\n      state.rooms = rooms\n    },\n    [SET_PEOPLE](state, people) {\n      state.people = people\n    },\n    [SET_ROOM](state, room: Room) {\n      state.room = room\n    },\n    [ADD_MESSAGE](state, message: Message) {\n      if (message.contentType === Message.ContentType.Image) {\n        state.imageMessageIndices[message.id] = state.messages.length\n      }\n      state.messages.push(message)\n    },\n    [ADD_USER](state, user: ChatUser) {\n      state.people.push(user)\n    },\n    [REMOVE_USER](state, user: ChatUser) {\n      const index = state.people.findIndex(({ id }) => id === user.id)\n      state.people.splice(index, 1)\n    },\n    [IMAGE_UPLOADED](state, message: Message) {\n      const index = state.imageMessageIndices[message.id]\n      Vue.set(state.messages, index, message)\n      Vue.delete(state.imageMessageIndices, message.id)\n    },\n    [CLEAR](state) {\n      state.messages = []\n      state.rooms = []\n      state.people = []\n      state.room = dummyRoom\n    },\n  },\n  actions: {\n    [ENTER_LOBBY](context) {\n      return subscribeRoomsEvent(context)\n    },\n    [LEAVE_LOBBY](context) {\n      return unsubscribeEvents(context, [SubRoomsKey])\n    },\n    [ENTER_ROOM]: (context, roomId) => {\n      context.commit(CLEAR)\n      return subscribeRoomEvent(context, roomId)\n    },\n    [LEAVE_ROOM]: (context) => {\n      return unsubscribeEvents(context, [SubRoomKey])\n    },\n    [DISPATCH_MESSAGE](context, message: Message.Params) {\n      return dispatchMessage(context.state.room.id, message)\n    },\n    [SEND_INVITATION]({ getters }, invitee: string) {\n      const currentRoom: Room = getters[GET_ROOM_INFO]\n      return sendInvitation({\n        room: {\n          id: currentRoom.id,\n          name: currentRoom.name,\n        },\n        invitee,\n      })\n    },\n  },\n}\n\nasync function subscribeRoomsEvent(context: ActionContext<State, RootState>) {\n  const unsubscribePromise = subscribeChatRooms((rooms) => {\n    context.commit(SET_ROOMS, rooms.reduce((arr, room) => {\n      arr[room.order] = room\n      return arr\n    }, [...context.state.rooms]))\n  })\n  context.state.unsubscribes[SubRoomsKey] = unsubscribePromise\n  return unsubscribePromise\n}\n\nasync function subscribeRoomEvent(context: ActionContext<State, RootState>, roomId: string) {\n  function createSystemMessage(content: string): Message {\n    return {\n      id: uuid(),\n      type: Message.Type.System,\n      contentType: ContentType.Text,\n      content,\n      sender: { id: '', name: '' },\n      createdAt: Date.now(),\n    }\n  }\n  const unsubscribePromise = subscribeChatRoom(roomId, (event, data) => {\n    switch (event) {\n      case ChatEvent.ROOM_UPDATED:\n        context.commit(SET_ROOM, data)\n        break\n      case ChatEvent.USER_JOINED:\n        context.commit(\n          ADD_MESSAGE,\n          createSystemMessage(`${(data as ChatUser).name}님이 입장했습니다.`),\n        )\n        context.commit(ADD_USER, data)\n        break\n      case ChatEvent.USER_LEAVE:\n        context.commit(\n          ADD_MESSAGE,\n          createSystemMessage(`${(data as ChatUser).name}님이 퇴장했습니다.`),\n        )\n        context.commit(REMOVE_USER, data)\n        break\n      case ChatEvent.NEW_MESSAGE:\n        context.commit(ADD_MESSAGE, data)\n        break\n      case ChatEvent.IMAGE_UPLOADED:\n        context.commit(IMAGE_UPLOADED, data)\n        break\n      case ChatEvent.USER_LIST_LOADED:\n        context.commit(SET_PEOPLE, data)\n        break\n    }\n  })\n  context.state.unsubscribes[SubRoomKey] = unsubscribePromise\n  return unsubscribePromise\n}\n\nasync function unsubscribeEvents(context: ActionContext<State, RootState>, keys: string[]) {\n  await Promise.all(keys.map(key => {\n    const unsubscribePromise = context.state.unsubscribes[key]\n    if (unsubscribePromise != null) {\n      Vue.delete(context.state.unsubscribes, key)\n      return unsubscribePromise.then((unsubscribe) => unsubscribe())\n    }\n  }))\n}\n\nexport { chatModule }\n","import { ActionContext, Module } from 'vuex'\nimport { RootState } from '@/store/root'\nimport { CLEAR_DIALOGS, NEXT_DIALOG, REQUEST_DIALOG } from '@/store/dialog/actions.type'\nimport {\n  ConfirmInvitationDialog,\n  DialogType,\n  InvitationDialog,\n  MessageDialog,\n} from '@/store/dialog/types'\nimport {\n  GET_CURRENT_CONFIRM_INVITATION_DIALOG,\n  GET_CURRENT_INVITATION_DIALOG,\n  GET_CURRENT_MESSAGE_DIALOG,\n} from '@/store/dialog/getters.type'\nimport { fetchUsers, Profile, Room } from '@/services/backend'\nimport { GET_PROFILE } from '@/store/session/getters.type'\nimport { GET_ROOM_INFO } from '@/store/chat/getters.type'\n\ntype DialogParams = MessageDialog.Params | InvitationDialog.Params | ConfirmInvitationDialog.Params\n\ninterface DialogRequestParams {\n  dialogType: DialogType;\n  params: DialogParams;\n}\n\ninterface DialogState<T> {\n  current: T | null;\n  queue: T[];\n}\n\ninterface State {\n  [DialogType.MESSAGE]: DialogState<MessageDialog.Params>;\n  [DialogType.INVITATION]: DialogState<InvitationDialog.Params>,\n  [DialogType.CONFIRM_INVITATION]: DialogState<ConfirmInvitationDialog.Params>,\n}\n\nconst dialogModule: Module<State, RootState> = {\n  state: () => ({\n    [DialogType.MESSAGE]: {\n      current: null,\n      queue: [],\n    },\n    [DialogType.INVITATION]: {\n      current: null,\n      queue: [],\n    },\n    [DialogType.CONFIRM_INVITATION]: {\n      current: null,\n      queue: [],\n    },\n  }),\n  getters: {\n    [GET_CURRENT_MESSAGE_DIALOG]: (state) => state[DialogType.MESSAGE].current,\n    [GET_CURRENT_INVITATION_DIALOG]: (state) => state[DialogType.INVITATION].current,\n    [GET_CURRENT_CONFIRM_INVITATION_DIALOG]: (state) => state[DialogType.CONFIRM_INVITATION].current,\n  },\n  actions: {\n    [CLEAR_DIALOGS]({ state }) {\n      clear(state[DialogType.MESSAGE])\n      clear(state[DialogType.INVITATION])\n      clear(state[DialogType.CONFIRM_INVITATION])\n    },\n    [REQUEST_DIALOG](context: ActionContext<State, RootState>, { dialogType, params }: DialogRequestParams) {\n      switch (dialogType) {\n        case DialogType.MESSAGE:\n          showMessageDialog(context, params as MessageDialog.Params)\n          break\n        case DialogType.INVITATION:\n          showInvitationDialog(context, params as InvitationDialog.Params)\n          break\n        case DialogType.CONFIRM_INVITATION:\n          showConfirmInvitationDialog(context, params as ConfirmInvitationDialog.Params)\n          break\n      }\n    },\n    [NEXT_DIALOG](context, dialogType: DialogType) {\n      context.state[dialogType].current = null\n      setTimeout(() => {\n        context.state[dialogType].current = context.state[dialogType].queue.pop() || null\n      }, 100)\n    },\n  },\n}\n\nfunction consumeDialogRequest(\n  { state, dispatch } : ActionContext<State, RootState>,\n  { dialogType, params }: { dialogType: DialogType, params: any },\n) {\n  if (state[dialogType].current != null) {\n    state[dialogType].queue.unshift(params)\n  } else {\n    state[dialogType].current = params\n  }\n}\n\nfunction showInvitationDialog(context: ActionContext<State, RootState>, params: InvitationDialog.Params) {\n  const profile: Profile = context.getters[GET_PROFILE]\n  const currentRoom: Room = context.getters[GET_ROOM_INFO]\n  consumeDialogRequest(context, {\n    dialogType: DialogType.INVITATION,\n    params: {\n      usersPromise: fetchUsers()\n        .then((users) =>\n          users.filter((user) =>\n            profile.uid !== user.id && user.currentRoomId !== currentRoom.id)),\n      handleOk: params.handleOk,\n    },\n  })\n}\n\nfunction showConfirmInvitationDialog(context: ActionContext<State, RootState>, params: ConfirmInvitationDialog.Params) {\n  consumeDialogRequest(context, {\n    dialogType: DialogType.CONFIRM_INVITATION,\n    params,\n  })\n}\n\nfunction showMessageDialog(context: ActionContext<State, RootState>, params: MessageDialog.Params) {\n  consumeDialogRequest(context, {\n    dialogType: DialogType.MESSAGE,\n    params,\n  })\n}\n\nfunction clear(state: DialogState<any>) {\n  state.queue = []\n  state.current = null\n}\n\nexport { dialogModule, DialogRequestParams }\n","import { StoreOptions } from 'vuex'\nimport { sessionModule } from '@/store/session'\nimport { chatModule } from '@/store/chat'\nimport { dialogModule } from '@/store/dialog'\nimport { IS_BUSY } from './getters.type'\nimport { SET_BUSY } from './mutations.type'\n\ninterface RootState {\n  isBusy: boolean;\n}\n\nconst rootModule: StoreOptions<RootState> = {\n  modules: {\n    session: sessionModule,\n    chat: chatModule,\n    dialog: dialogModule,\n  },\n  state: () => ({\n    isBusy: true,\n  }),\n  getters: {\n    [IS_BUSY]: state => state.isBusy,\n  },\n  mutations: {\n    [SET_BUSY](state, enable) {\n      state.isBusy = enable\n    },\n  },\n}\n\nexport {\n  RootState,\n  rootModule,\n}\n","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport { rootModule } from '@/store/root'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store(rootModule)\n","export const GET_ROOMS = 'chat.getRooms'\nexport const GET_ROOM_INFO = 'chat.getRoom'\nexport const GET_MESSAGES = 'chat.getMessages'\nexport const GET_PEOPLE = 'chat.getPeople'\n","export const GET_DIALOG_REQUEST_QUEUE = 'dialog.getDialogRequestQueue'\nexport const GET_CURRENT_MESSAGE_DIALOG = 'dialog.getCurrentMessageDialog'\nexport const GET_CURRENT_INVITATION_DIALOG = 'dialog.getCurrentInvitationDialog'\nexport const GET_CURRENT_CONFIRM_INVITATION_DIALOG = 'dialog.getCurrentConfirmInvitationDialog'\n","export const SIGN_IN = 'session.signIn'\nexport const SIGN_OUT = 'session.signOut'\nexport const CHECK_USER_SESSION = 'root.checkUserSession'\n","import { ChatUser } from '@/services/backend'\nimport { DialogRequestParams } from '@/store/dialog/index'\n\nexport declare namespace InvitationDialog {\n  export interface Params {\n    usersPromise?: Promise<ChatUser[]>;\n    handleOk?: (uid: string) => void;\n    handleClose?: () => void;\n  }\n}\n\nexport declare namespace MessageDialog {\n  export interface Params {\n    message: string[] | string;\n    okText?: string;\n    closeText?: string;\n    handleOk?: () => void;\n    handleClose?: () => void;\n  }\n}\n\nexport declare namespace ConfirmInvitationDialog {\n  export interface Params {\n    inviter: { id: string; name: string; };\n    room: { id: string; name: string; };\n    handleOk?: (roomId: string) => void;\n    handleClose?: () => void;\n  }\n}\n\nexport enum DialogType {\n  MESSAGE = 'message',\n  INVITATION = 'invitation',\n  CONFIRM_INVITATION = 'confirm',\n}\n\nexport interface RequestDialog {\n  (params: DialogRequestParams): Promise<void>\n}\n","export const IS_CONNECTING = 'session.isConnecting'\nexport const IS_SIGNED_IN = 'session.isSignedIn'\nexport const IS_VALID = 'session.isValid'\nexport const GET_PROFILE = 'session.getProfile'\n","import { Vue } from 'vue-property-decorator'\n\nexport const bus = new Vue({\n  methods: {\n    on(this: Vue, listener: Vue, event: string, handler: Function) {\n      this.$on(event, handler)\n      listener.$on('hook:destroyed', () => this.$off(event, handler))\n    },\n  },\n})\n","enum RouteName {\n  Main = 'Main',\n  ChatRoomList = 'ChatRoomList',\n  ChatRoom = 'ChatRoom',\n}\n\nexport default RouteName\n","export const SET_BUSY = 'root.setBusy'\n","import { createDecorator } from 'vue-class-component'\nimport { Vue } from 'vue-property-decorator'\nimport { store } from '@/store'\nimport { SET_BUSY } from '@/store/root/mutations.type'\nimport { ComponentOptions } from 'vue'\n\nconst factory = createDecorator((options: ComponentOptions<Vue>, prop: string) => {\n  const method = options.methods?.[prop] || (options as { [key: string]: any })[prop]\n  const container: any = options.methods?.[prop] ? options.methods : options\n\n  if (!method) {\n    throw new Error(`${prop} is ${method}.`)\n  }\n\n  container[prop] = async function (this: Vue, ...args: any[]) {\n    store.commit(SET_BUSY, true)\n    try {\n      return await method.apply(this, args)\n    } finally {\n      store.commit(SET_BUSY, false)\n    }\n  }\n})\n\nexport function WithGlobalSpinner(target: Vue, key: string) {\n  factory(target, key)\n}\n","import { UserInfo } from 'firebase/app'\n\nnamespace Message {\n  export interface Params {\n    content: string | File[] | null;\n    contentType: Message.ContentType;\n  }\n  export enum Type {\n    User = 'USER',\n    System = 'SYSTEM',\n  }\n\n  export enum ContentType {\n    Text = 'TEXT',\n    Image = 'IMAGE',\n  }\n}\n\ntype Profile = UserInfo\n\ntype Timestamp = number\n\ninterface Message {\n  id: string,\n  type: Message.Type;\n  content: string;\n  contentType: Message.ContentType;\n  sender: {\n    id: string;\n    name: string;\n  };\n  createdAt: Timestamp;\n}\n\ninterface ChatUser {\n  id: string;\n  name: string;\n  joinedAt: Timestamp;\n}\n\ninterface Room {\n  id: string;\n  order: number;\n  name: string;\n  countPeople: number;\n}\n\ninterface Session {\n  id: string;\n  name: string;\n  currentRoomId: string;\n}\n\nexport {\n  Profile,\n  Room,\n  Message,\n  ChatUser,\n  Session,\n}\n","import firebase, { UserInfo } from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/storage'\nimport 'firebase/analytics'\nimport { ChatUser, Message, Room, Session } from '@/services/backend/types'\nimport firebaseConfig from '@/../firebase.config.json'\nimport DataSnapshot = firebase.database.DataSnapshot\nimport ContentType = Message.ContentType\n\nconst ServerValue = firebase.database.ServerValue\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst firebaseAuth = firebaseApp.auth()\nconst firebaseDatabase = firebaseApp.database()\nconst firebaseStorage = firebaseApp.storage()\n\nenum ChatEvent {\n  ROOM_UPDATED = 'ROOM_UPDATED',\n  USER_LIST_LOADED = 'USER_LIST_LOADED',\n  USER_JOINED = 'USER_JOINED',\n  USER_LEAVE = 'USER_LEAVE',\n  NEW_MESSAGE = 'NEW_MESSAGE',\n  IMAGE_UPLOADED = 'IMAGE_UPLOADED',\n  DISCONNECTED = 'DISCONNECTED',\n  INVITATION_RECEIVED = 'INVITATION_RECEIVED',\n}\n\nfunction checkUserSession(): Promise<Session | null> {\n  return new Promise((resolve, reject) => {\n    const off = firebaseAuth.onAuthStateChanged(async () => {\n      off()\n      try {\n        const sessionSnapshot = await getSessionRef().once('value')\n        resolve(sessionSnapshot.val())\n      } catch (e) {\n        reject(e)\n      }\n    })\n  })\n}\n\nasync function signIn(name: string) {\n  await firebaseAuth.signInAnonymously()\n  const user = getCurrentUser()\n  const refs = await getSessionsRef().orderByChild('name').equalTo(name).once('value')\n  let exist = false\n  refs.forEach((ref) => {\n    if (ref.val().online) {\n      exist = true\n      return true\n    }\n  })\n  if (exist) {\n    firebaseAuth.signOut()\n    throw new Error('사용중인 이름입니다.')\n  }\n  await Promise.all([\n    getSessionRef().update({\n      name,\n    }),\n    user.updateProfile({ displayName: name }),\n  ])\n  return user\n}\n\nfunction signOut() {\n  getSessionRef().remove()\n  return firebaseAuth.signOut()\n}\n\nfunction dispatchMessage(roomId: string, params: Message.Params) {\n  const user = getCurrentUser()\n  const message = {\n    ...params,\n    sender: {\n      id: user.uid,\n      name: user.displayName,\n    },\n    createdAt: ServerValue.TIMESTAMP,\n  }\n  if (params.contentType === Message.ContentType.Image) {\n    const files = params.content as File[]\n    message.content = null\n    return files.map(async (file) =>\n      getChatRoomRef(roomId)\n        .child('messages')\n        .push(message)\n        .then(ref => {\n          const path = [\n            roomId,\n            ref.key,\n            new Date().toISOString(),\n            user.uid,\n            file.name,\n          ].join('/')\n          uploadFile(path, file).then((url) => ref.update({ content: url }))\n        }))\n  } else {\n    return getChatRoomRef(roomId)\n      .child('messages')\n      .push(message)\n  }\n}\n\nfunction uploadFile(destPath: string, file: File) {\n  return firebaseStorage\n    .ref(destPath)\n    .put(file)\n    .then((snapshot) => snapshot.ref.getDownloadURL())\n}\n\nasync function fetchUsers() {\n  const snapshots = await getSessionsRef()\n    .orderByChild('online')\n    .equalTo(true)\n    .once('value')\n  const users: { id: string; name: string, currentRoomId: string; }[] = []\n  snapshots.forEach((snapshot) => {\n    const data = snapshot.val()\n    users.push({\n      id: snapshot.key as string,\n      name: data.name,\n      currentRoomId: data.currentRoomId,\n    })\n  })\n  return users\n}\n\nfunction sendInvitation({ room, invitee }: {\n  room: { id: string; name: string };\n  invitee: string;\n}) {\n  const { uid, displayName } = getCurrentUser()\n  return getInvitations()\n    .child(invitee)\n    .push({\n      room,\n      inviter: {\n        id: uid,\n        name: displayName,\n      },\n      createdAt: ServerValue.TIMESTAMP,\n    })\n}\n\nfunction subscribeAuthState(callbackFn: (user: UserInfo | null) => void) {\n  return firebaseAuth.onAuthStateChanged((user) => {\n    const userInfo = (user?.toJSON() as UserInfo) || null\n    callbackFn(userInfo)\n  })\n}\n\nfunction subscribeInvitation(callbackFn: (invitation: any) => void) {\n  const { uid } = getCurrentUser()\n  const invitationRef = getInvitations()\n    .child(uid)\n    .orderByChild('createdAt')\n    .startAt(Date.now())\n  invitationRef.on('child_added', snapshot => callbackFn({\n    ...snapshot.val(),\n    id: snapshot.key,\n  }))\n  return () => invitationRef.off()\n}\n\nfunction subscribeChatRooms(roomsCallbackFn: (rooms: Room[]) => void): Promise<() => void> {\n  return new Promise(resolve => {\n    const chatRoomStatesRef = getChatRoomStatesRef().orderByChild('order')\n    chatRoomStatesRef.on('value', (chatRoomsSnapshots: DataSnapshot) => {\n      const rooms: Room[] = []\n      chatRoomsSnapshots.forEach(chatRoomSnapshot => {\n        const data = chatRoomSnapshot.val()\n        rooms.push({\n          ...data,\n          countPeople: data.countPeople || 0,\n          id: chatRoomSnapshot.key,\n        })\n      })\n      roomsCallbackFn(rooms)\n      resolve(() => chatRoomStatesRef.off())\n    })\n  })\n}\n\nasync function subscribeChatRoom(roomId: string, roomCallbackFn: (event: ChatEvent, data: Room | ChatUser | Message | ChatUser[]) => void) {\n  const { uid } = getCurrentUser()\n  const chatRoomUsersRef = getChatRoomUsersRef(roomId)\n  const userSnapshots = await chatRoomUsersRef.once('value')\n  const me: ChatUser = await addUserToChatRoom(roomId)\n  const chatRoomStateRef = getChatRoomStateRef(roomId)\n  const chatRoomUsersQuery = chatRoomUsersRef.orderByChild('joinedAt').startAt(me.joinedAt)\n  const chatRoomMessagesQuery = getChatRoomMessagesRef(roomId).orderByChild('createdAt').startAt(me.joinedAt)\n  const roomUsersDisconnection = chatRoomUsersQuery.ref.child(uid).onDisconnect()\n  const roomStateDisconnection = chatRoomStateRef.onDisconnect()\n\n  await Promise.all([\n    roomUsersDisconnection.remove(),\n    roomStateDisconnection.update({ countPeople: ServerValue.increment(-1) }),\n  ])\n\n  const users: ChatUser[] = []\n  userSnapshots.forEach(snapshot => {\n    users.push({\n      ...snapshot.val(),\n      id: snapshot.key,\n    })\n  })\n  roomCallbackFn(ChatEvent.USER_LIST_LOADED, users)\n\n  chatRoomStateRef.on('value', (snapshot) => {\n    const data = snapshot.val()\n    roomCallbackFn(\n      ChatEvent.ROOM_UPDATED,\n      {\n        ...data,\n        id: snapshot.key,\n      },\n    )\n  })\n  chatRoomUsersQuery.on('child_added', (snapshot) => {\n    const data = snapshot.val()\n    roomCallbackFn(\n      ChatEvent.USER_JOINED,\n      data,\n    )\n  })\n  chatRoomUsersQuery.on('child_removed', (snapshot) => {\n    const data = snapshot.val()\n    roomCallbackFn(\n      ChatEvent.USER_LEAVE,\n      data,\n    )\n  })\n  chatRoomMessagesQuery.on('child_added', (snapshot) => {\n    const data = snapshot.val()\n    const message: Message = {\n      ...data,\n      id: snapshot.key,\n    }\n    roomCallbackFn(\n      ChatEvent.NEW_MESSAGE,\n      message,\n    )\n  })\n  chatRoomMessagesQuery.on('child_changed', (snapshot) => {\n    const data = snapshot.val()\n    if (data.contentType === ContentType.Image && data.content) {\n      roomCallbackFn(\n        ChatEvent.IMAGE_UPLOADED,\n        {\n          ...data,\n          id: snapshot.key,\n        },\n      )\n    }\n  })\n\n  return async () => {\n    chatRoomStateRef.off()\n    chatRoomUsersQuery.off()\n    chatRoomMessagesQuery.off()\n    await removeUserFromRoom(roomId)\n    await Promise.all([\n      roomStateDisconnection.cancel(),\n      roomUsersDisconnection.cancel(),\n    ])\n  }\n}\n\n// https://firebase.google.com/docs/firestore/solutions/presence?hl=ko\nfunction subscribeConnectionState(callbackFn: (connected: boolean) => void) {\n  const { uid } = getCurrentUser()\n  const sessionRef = firebaseDatabase.ref(`/sessions/${uid}`)\n  const connectionRef = firebaseDatabase.ref('.info/connected')\n  let promise = Promise.resolve()\n  connectionRef.on(\n    'value',\n    (snapshot) => {\n      promise = promise.then(() => {\n        if (snapshot.val() === false) {\n          callbackFn(false)\n          return\n        }\n        return sessionRef\n          .onDisconnect()\n          .update({\n            online: false,\n            lastChanged: ServerValue.TIMESTAMP,\n          })\n          .then(() => {\n            sessionRef.update({\n              online: true,\n              lastChanged: ServerValue.TIMESTAMP,\n            })\n            callbackFn(true)\n          })\n      })\n    },\n  )\n\n  return () => connectionRef.off()\n}\n\nfunction getCurrentUser() {\n  const user = firebaseAuth.currentUser\n  if (user == null) {\n    throw new Error('Unauthorized')\n  }\n  return user\n}\n\nfunction getChatRoomStatesRef() {\n  return firebaseDatabase.ref('chatRoomStates')\n}\n\nfunction getChatRoomStateRef(roomId: string) {\n  return getChatRoomStatesRef().child(roomId)\n}\n\nfunction getChatRoomsRef() {\n  return firebaseDatabase.ref('chatRooms')\n}\n\nfunction getChatRoomRef(roomId: string) {\n  return getChatRoomsRef().child(roomId)\n}\n\nfunction getChatRoomUsersRef(roomId: string) {\n  return getChatRoomRef(roomId).child('users')\n}\n\nfunction getChatRoomMessagesRef(roomId: string) {\n  return getChatRoomRef(roomId).child('messages')\n}\n\nfunction getSessionsRef() {\n  return firebaseDatabase.ref('sessions')\n}\n\nfunction getSessionRef() {\n  return getSessionsRef().child(getCurrentUser().uid)\n}\n\nfunction getInvitations() {\n  return firebaseDatabase.ref('invitations')\n}\n\nasync function addUserToChatRoom(roomId: string) {\n  const { uid, displayName } = getCurrentUser()\n  const chatRoomUsersRef = getChatRoomUsersRef(roomId)\n  const chatRoomUserRef = chatRoomUsersRef.child(uid)\n  const chatRoomStateRef = getChatRoomStateRef(roomId)\n  const sessionRef = getSessionRef()\n  try {\n    await chatRoomUserRef.set({\n      id: uid,\n      name: displayName,\n      joinedAt: ServerValue.TIMESTAMP,\n    })\n    const users = await chatRoomUsersRef.once('value')\n    await chatRoomStateRef.update({ countPeople: users.numChildren() })\n    await sessionRef.update({ currentRoomId: roomId })\n    const me = await chatRoomUserRef.once('value')\n    return me.val()\n  } catch (e) {\n    sessionRef.update({ currentRoomId: null })\n    chatRoomUserRef.remove()\n    throw e\n  }\n}\n\nasync function removeUserFromRoom(roomId: string) {\n  const { uid } = getCurrentUser()\n  const chatRoomStateRef = getChatRoomStateRef(roomId)\n  const chatRoomUsersRef = getChatRoomUsersRef(roomId)\n  const chatRoomUserRef = chatRoomUsersRef.child(uid)\n  const sessionRef = getSessionRef()\n  try {\n    await chatRoomUserRef.remove()\n    const users = await chatRoomUsersRef.once('value')\n    await chatRoomStateRef.update({ countPeople: users.numChildren() })\n    await sessionRef.update({ currentRoomId: null })\n  } catch {\n    sessionRef.update({ currentRoomId: null })\n    chatRoomUserRef.remove()\n  }\n}\n\nexport * from './types'\nexport {\n  ChatEvent,\n  checkUserSession,\n  signIn,\n  signOut,\n  dispatchMessage,\n  subscribeConnectionState,\n  subscribeAuthState,\n  subscribeInvitation,\n  subscribeChatRoom,\n  subscribeChatRooms,\n  uploadFile,\n  fetchUsers,\n  sendInvitation,\n}\n","export const ENTER_LOBBY = 'chat.enterLobby'\nexport const LEAVE_LOBBY = 'chat.leaveLobby'\nexport const ENTER_ROOM = 'chat.enterRoom'\nexport const LEAVE_ROOM = 'chat.leaveRoom'\nexport const DISPATCH_MESSAGE = 'chat.dispatchMessage'\nexport const SEND_INVITATION = 'chat.sendInvitation'\n","export const IS_BUSY = 'root.isBusy'\n","import * as tsx from 'vue-tsx-support'\nimport { Component, Prop } from 'vue-property-decorator'\nimport './VButton.scss'\n\ninterface VButtonProps {\n  type?: string;\n  variant?: string;\n  disabled?: boolean;\n}\n\ninterface VButtonEvents {\n  onClick($event: Event): void\n}\n\n@Component\nexport default class VButton extends tsx.Component<VButtonProps, VButtonEvents> {\n  @Prop(String)\n  readonly variant!: string\n\n  get buttonType() {\n    return this.$attrs.type || 'button'\n  }\n\n  get styleVariant() {\n    return this.variant ? `button_${this.variant}` : ''\n  }\n\n  render() {\n    return (\n      <button\n        staticClass=\"button\"\n        class={this.styleVariant}\n        type={this.buttonType}\n        on={this.$listeners}\n      >\n        {this.$slots.default}\n      </button>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/silver/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-d7d0c836/VButton.tsx\" });","export const NEXT_DIALOG = 'dialog.nextDialog'\nexport const REQUEST_DIALOG = 'dialog.requestDialog'\nexport const CLEAR_DIALOGS = 'dialog.clearDialogs'\n","import { Component, Vue } from 'vue-property-decorator'\nimport './VSpinner.scss'\n\n@Component\nexport default class VSpinner extends Vue {\n  render() {\n    return <div class=\"spinner\" />\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/silver/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-49c13ff3/VSpinner.tsx\" });","import * as tsx from 'vue-tsx-support'\nimport { Component, Prop } from 'vue-property-decorator'\n\nimport './VModal.scss'\nimport VButton from '@/components/VButton/VButton'\n\ninterface VModalProps {\n  okLabel?: string;\n  closeLabel?: string;\n}\n\ninterface VModalEvents {\n  onOk(): void\n  onClose(): void\n}\n\n@Component\nexport default class VModal extends tsx.Component<VModalProps, VModalEvents> {\n  @Prop({ type: String, default: '확인' })\n  private readonly okLabel!: string\n\n  @Prop({ type: String, default: '닫기' })\n  private readonly closeLabel!: string\n\n  render() {\n    return (\n      <div class=\"dialog-background\">\n        <div class=\"dialog-window\">\n          <div class=\"dialog-body\">\n            {this.$slots.default}\n          </div>\n          <div class=\"dialog-footer\">\n            {this.closeLabel &&\n              <VButton\n                variant=\"light\"\n                class=\"dialog-footer__close-button\"\n                onClick={() => this.$emit('close')}\n              >\n                {this.closeLabel}\n              </VButton>\n            }\n            <VButton\n              variant=\"yellow\"\n              onClick={() => this.$emit('ok')}\n            >\n              {this.okLabel}\n            </VButton>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/silver/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-a039fe1a/VModal.tsx\" });","import * as tsx from 'vue-tsx-support'\nimport { Component, Prop } from 'vue-property-decorator'\nimport VModal from '@/components/VModal/VModal'\nimport { MessageDialog } from '@/store/dialog/types'\n\ninterface Props {\n  params: MessageDialog.Params;\n}\n\ninterface Events {\n  onOk(): void\n  onClose(): void\n}\n\n@Component\nexport default class DialogMessage extends tsx.Component<Props, Events> {\n  @Prop(Object)\n  private readonly params!: MessageDialog.Params\n\n  get message() {\n    return ([] as string[]).concat(this.params.message).map((message, index) => (\n      <div\n        key={index}\n        class=\"dialog-content-message\"\n      >\n        {message}\n      </div>\n    ))\n  }\n\n  render() {\n    return (\n      <VModal\n        okLabel={this.params.okText}\n        closeLabel={this.params.closeText}\n        onOk={() => this.$emit('ok')}\n        onClose={() => this.$emit('close')}\n      >\n        <div class=\"dialog-content\">\n          {this.message}\n        </div>\n      </VModal>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/silver/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-a06aedda/DialogMessage.tsx\" });","import * as tsx from 'vue-tsx-support'\nimport { Component, Prop } from 'vue-property-decorator'\n\nimport './DialogInvitation.scss'\nimport VModal from '@/components/VModal/VModal'\nimport { ChatUser } from '@/services/backend'\nimport { WithGlobalSpinner } from '@/decorators/WithGlobalSpinner'\nimport { InvitationDialog } from '@/store/dialog/types'\n\ninterface Props {\n  params: InvitationDialog.Params;\n}\n\ninterface Events {\n  onOk(uid: string): void\n  onClose(): void\n}\n\n@Component({\n  components: { VModal },\n})\nexport default class DialogInvitation extends tsx.Component<Props, Events> {\n  @Prop(Object)\n  private readonly params!: InvitationDialog.Params\n\n  private users: ChatUser[] | null = null\n\n  private guest: string = ''\n\n  @WithGlobalSpinner\n  private async onOk() {\n    if (this.guest) {\n      this.$emit('ok', this.guest)\n    }\n  }\n\n  @WithGlobalSpinner\n  async created() {\n    const users = await this.params.usersPromise\n    this.users = users || []\n    if (this.users.length) {\n      this.guest = this.users[0].id\n    }\n  }\n\n  render() {\n    return (\n      <VModal\n        okLabel=\"초대\"\n        onOk={this.onOk}\n        onClose={() => this.$emit('close')}\n      >\n        <div class=\"dialog-content\">\n          <label\n            class=\"dialog-select-user-label\"\n            for=\"user\"\n          >\n            초대할 사람을 선택하세요.\n          </label>\n          <select\n            id=\"user\"\n            v-model={this.guest}\n            value={this.guest}\n            class=\"dialog-select-user\"\n          >\n            {this.users?.length &&\n              this.users.map(chatUser => (\n                <option\n                  key={chatUser.id}\n                  value={chatUser.id}\n                  data-test=\"option\"\n                >\n                  {chatUser.name}\n                </option>\n              ))\n            }\n            {this.users && !this.users.length &&\n                <option\n                  disabled\n                  value=\"\"\n                >\n                  초대할 사람이 없습니다.\n                </option>\n            }\n          </select>\n        </div>\n      </VModal>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/silver/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-38f265b3/DialogInvitation.tsx\" });","import * as tsx from 'vue-tsx-support'\nimport { Component, Prop } from 'vue-property-decorator'\n\nimport VModal from '@/components/VModal/VModal'\nimport { ConfirmInvitationDialog } from '@/store/dialog/types'\n\ninterface Props {\n  params: ConfirmInvitationDialog.Params;\n}\n\ninterface Events {\n  onOk(roomId: string): void\n  onClose(): void\n}\n\n@Component\nexport default class DialogConfirmInvitation extends tsx.Component<Props, Events> {\n  @Prop(Object)\n  private readonly params!: ConfirmInvitationDialog.Params\n\n  render() {\n    return (\n      <VModal\n        okLabel=\"수락\"\n        onOk={() => this.$emit('ok', this.params.room.id)}\n        onClose={() => this.$emit('close')}\n      >\n        <div class=\"dialog-content\">\n          <div class=\"dialog-content-message\">\n            <strong>{this.params.inviter.name}</strong> 님이,\n          </div>\n          <div class=\"dialog-content-message\">\n            <strong>{this.params.room.name}</strong> 방으로 초대했습니다.\n          </div>\n        </div>\n      </VModal>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/silver/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-ff617112/DialogConfirmInvitation.tsx\" });","import { Component, Vue } from 'vue-property-decorator'\nimport { Action, Getter } from 'vuex-class'\n\nimport './DialogContainer.scss'\nimport DialogMessage from '@/components/DialogMessage/DialogMessage'\nimport {\n  ConfirmInvitationDialog,\n  DialogType,\n  InvitationDialog,\n  MessageDialog,\n} from '@/store/dialog/types'\nimport {\n  GET_CURRENT_CONFIRM_INVITATION_DIALOG,\n  GET_CURRENT_INVITATION_DIALOG,\n  GET_CURRENT_MESSAGE_DIALOG,\n} from '@/store/dialog/getters.type'\nimport DialogInvitation from '@/components/DialogInvitation/DialogInvitation'\nimport { NEXT_DIALOG } from '@/store/dialog/actions.type'\nimport DialogConfirmInvitation from '@/components/DialogConfirmInvitation/DialogConfirmInvitation'\n\n@Component\nexport default class DialogContainer extends Vue {\n  @Getter(GET_CURRENT_MESSAGE_DIALOG)\n  private readonly currentMessageDialog!: MessageDialog.Params | null\n\n  @Getter(GET_CURRENT_INVITATION_DIALOG)\n  private readonly currentInvitationDialog!: InvitationDialog.Params | null\n\n  @Getter(GET_CURRENT_CONFIRM_INVITATION_DIALOG)\n  private readonly currentConfirmInvitationDialog!: ConfirmInvitationDialog.Params | null\n\n  @Action(NEXT_DIALOG)\n  private readonly nextDialog!: (dialogType: DialogType) => void\n\n  private handleOk(dialogType: DialogType, dialog: { handleOk?: (result: any) => void }, result?: any) {\n    dialog.handleOk?.(result)\n    this.nextDialog(dialogType)\n  }\n\n  private handleClose(dialogType: DialogType, dialog: { handleClose?: () => void }) {\n    dialog.handleClose?.()\n    this.nextDialog(dialogType)\n  }\n\n  render() {\n    return (\n      <div class=\"dialog-container\">\n        {this.currentInvitationDialog &&\n          <DialogInvitation params={this.currentInvitationDialog}\n            onOk={(uid) => this.handleOk(DialogType.INVITATION, this.currentInvitationDialog!, uid)}\n            onClose={() => this.handleClose(DialogType.INVITATION, this.currentInvitationDialog!)}\n          />\n        }\n        {this.currentConfirmInvitationDialog &&\n          <DialogConfirmInvitation params={this.currentConfirmInvitationDialog}\n            onOk={(roomId) => this.handleOk(DialogType.CONFIRM_INVITATION, this.currentConfirmInvitationDialog!, roomId)}\n            onClose={() => this.handleClose(DialogType.CONFIRM_INVITATION, this.currentConfirmInvitationDialog!)}\n          />\n        }\n        {this.currentMessageDialog &&\n          <DialogMessage params={this.currentMessageDialog}\n            onOk={() => this.handleOk(DialogType.MESSAGE, this.currentMessageDialog!)}\n            onClose={() => this.handleClose(DialogType.MESSAGE, this.currentMessageDialog!)}\n          />\n        }\n      </div>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/silver/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-333a3787/DialogContainer.tsx\" });","import { Component, Vue } from 'vue-property-decorator'\nimport { Action, Getter } from 'vuex-class'\n\nimport '@/scss/index.scss'\nimport { IS_BUSY } from '@/store/root/getters.type'\nimport VSpinner from '@/components/VSpinner/VSpinner'\nimport DialogContainer from '@/components/DialogContainer/DialogContainer'\nimport { CLEAR_DIALOGS, REQUEST_DIALOG } from '@/store/dialog/actions.type'\nimport { ConfirmInvitationDialog, DialogType, RequestDialog } from '@/store/dialog/types'\nimport { bus } from '@/services/bus'\nimport { ChatEvent } from '@/services/backend'\nimport RouteName from '@/router/route.name'\n\n@Component\nexport default class App extends Vue {\n  @Getter(IS_BUSY)\n  readonly isBusy!: boolean\n\n  @Action(REQUEST_DIALOG)\n  readonly requestDialog!: RequestDialog\n\n  @Action(CLEAR_DIALOGS)\n  readonly clearDialogs!: () => Promise<void>\n\n  created() {\n    bus.on(this, ChatEvent.DISCONNECTED, () => {\n      this.clearDialogs()\n      this.requestDialog({\n        dialogType: DialogType.MESSAGE,\n        params: {\n          message: '서버와 연결이 끊겼습니다.',\n          closeText: '',\n        },\n      })\n    })\n    bus.on(this, ChatEvent.INVITATION_RECEIVED, (invitation: ConfirmInvitationDialog.Params) => {\n      this.requestDialog({\n        dialogType: DialogType.CONFIRM_INVITATION,\n        params: {\n          ...invitation,\n          handleOk: () => {\n            this.$router.push({\n              name: RouteName.ChatRoom,\n              params: { roomId: invitation.room.id },\n            })\n          },\n        },\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <router-view />\n        <DialogContainer />\n        <div class=\"global-spinner\" v-show={this.isBusy}>\n          <VSpinner />\n        </div>\n      </div>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/silver/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-2cc56dfa/App.tsx\" });","import { RouteConfig } from 'vue-router'\nimport RouteName from '@/router/route.name'\n\nconst main: RouteConfig = {\n  path: '/',\n  name: RouteName.Main,\n  component: () => import(/* webpackChunkName: \"main\" */ '@/views/main/PageMain'),\n}\nexport default main\n","import { RouteConfig } from 'vue-router'\nimport RouteName from '@/router/route.name'\n\nconst chatRoom: RouteConfig = {\n  path: '/rooms/:roomId',\n  name: RouteName.ChatRoom,\n  component: () => import(/* webpackChunkName: \"chat-room\" */ '@/views/chat-room/PageChatRoom'),\n}\n\nexport default chatRoom\n","import { RouteConfig } from 'vue-router'\nimport RouteName from '@/router/route.name'\n\nconst chatRooms: RouteConfig = {\n  path: '/rooms',\n  name: RouteName.ChatRoomList,\n  component: () => import(/* webpackChunkName: \"chat-room-list\" */ '@/views/chat-room-list/PageChatRoomList'),\n}\n\nexport default chatRooms\n","import { RouteConfig, RouterOptions } from 'vue-router'\nimport main from '@/router/main'\nimport chatRoom from '@/router/chat-room'\nimport chatRoomList from '@/router/chat-room-list'\nimport RouteName from '@/router/route.name'\n\nconst routes: RouteConfig[] = [\n  main,\n  chatRoomList,\n  chatRoom,\n  {\n    path: '*',\n    redirect: { name: RouteName.Main },\n  },\n]\n\nconst routerOptions: RouterOptions = {\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes,\n}\n\nexport default routerOptions\n","import Vue from 'vue'\nimport VueRouter, { Location, Route } from 'vue-router'\nimport routerOptions from './options'\nimport RouteName from '@/router/route.name'\nimport { store } from '@/store'\nimport { IS_SIGNED_IN } from '@/store/session/getters.type'\n\nVue.use(VueRouter)\n\nconst router = new VueRouter(routerOptions)\n\nasync function checkSession(to: Route, from: Route, next: (to?: Location) => void) {\n  if (to.name !== RouteName.Main && !store.getters[IS_SIGNED_IN]) {\n    next({ name: RouteName.Main })\n  } else {\n    next()\n  }\n}\n\n// 접속 페이지가 아닌 다른 페이지로 접근 했을때,\n// 서버 연결중이 아니면 접속 페이지로 이동하도록 확인\nrouter.beforeEach(checkSession)\n\nexport { router }\n","import Vue from 'vue'\nimport { Component } from 'vue-property-decorator'\nimport App from './App'\nimport { router } from './router'\nimport { store } from './store'\n\nVue.config.productionTip = false\n\nComponent.registerHooks([\n  'beforeRouteEnter',\n  'beforeRouteUpdate',\n  'beforeRouteLeave',\n])\n\nrouter.onError((err) => console.warn(err))\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App),\n}).$mount('#app')\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createSuper.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@firebase/analytics/dist/index.esm.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","writable","configurable","_arrayLikeToArray","arr","len","length","i","arr2","Array","_arrayWithoutHoles","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","from","_unsupportedIterableToArray","minLen","n","toString","call","slice","name","test","_nonIterableSpread","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","_typeof","obj","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","NewTarget","possibleConstructorReturn","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread2","target","source","forEach","defineProperty","getOwnPropertyDescriptors","defineProperties","_defineProperty","_defineProperties","props","descriptor","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","GtagCommand","EventName","ANALYTICS_ID_FIELD","GA_FID_KEY","ORIGIN_KEY","GTAG_URL","logEvent","gtagFunction","analyticsId","eventName","eventParams","options","params","global","EVENT","setCurrentScreen","screenName","SET","CONFIG","update","setUserId","id","setUserProperties","properties","flatProperties","_i","_a","setAnalyticsCollectionEnabled","enabled","window","logger","initializeGAId","app","installations","gtagCore","fid","_b","label","getId","sent","insertScriptTag","dataLayerName","script","document","createElement","src","async","head","appendChild","getOrCreateDataLayer","dataLayer","wrapGtag","initializedIdPromisesMap","command","idOrNameOrParams","gtagParams","initializationPromisesToWaitFor","gaSendToList","gaSendToList_1","sendToId","initializationPromise","values","idPromise","all","catch","initializationPromiseToWait","wrapOrCreateGtag","gtagFunctionName","_args","wrappedGtag","findGtagScriptOnPage","scriptTags","getElementsByTagName","tag","includes","gtagCoreFunction","wrappedGtagFunction","ERRORS","ERROR_FACTORY","gtagName","globalInitDone","settings","factory","analyticsInstance","version","ANALYTICS_TYPE","registerAnalytics","internalFactory","container","analytics","getProvider","getImmediate","reason","INTERNAL","registerComponent","setServiceProps","registerVersion"],"mappings":"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","file":"js/app~c5b24172.c78ce120.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { __assign, __awaiter, __generator } from 'tslib';\nimport { Logger } from '@firebase/logger';\nimport { ErrorFactory } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ANALYTICS_ID_FIELD = 'measurementId';\r\n// Key to attach FID to in gtag params.\r\nvar GA_FID_KEY = 'firebase_id';\r\nvar ORIGIN_KEY = 'origin';\r\nvar GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\r\nvar GtagCommand;\r\n(function (GtagCommand) {\r\n    GtagCommand[\"EVENT\"] = \"event\";\r\n    GtagCommand[\"SET\"] = \"set\";\r\n    GtagCommand[\"CONFIG\"] = \"config\";\r\n})(GtagCommand || (GtagCommand = {}));\r\n/*\r\n * Officially recommended event names for gtag.js\r\n * Any other string is also allowed.\r\n */\r\nvar EventName;\r\n(function (EventName) {\r\n    EventName[\"ADD_SHIPPING_INFO\"] = \"add_shipping_info\";\r\n    EventName[\"ADD_PAYMENT_INFO\"] = \"add_payment_info\";\r\n    EventName[\"ADD_TO_CART\"] = \"add_to_cart\";\r\n    EventName[\"ADD_TO_WISHLIST\"] = \"add_to_wishlist\";\r\n    EventName[\"BEGIN_CHECKOUT\"] = \"begin_checkout\";\r\n    /** @deprecated */\r\n    EventName[\"CHECKOUT_PROGRESS\"] = \"checkout_progress\";\r\n    EventName[\"EXCEPTION\"] = \"exception\";\r\n    EventName[\"GENERATE_LEAD\"] = \"generate_lead\";\r\n    EventName[\"LOGIN\"] = \"login\";\r\n    EventName[\"PAGE_VIEW\"] = \"page_view\";\r\n    EventName[\"PURCHASE\"] = \"purchase\";\r\n    EventName[\"REFUND\"] = \"refund\";\r\n    EventName[\"REMOVE_FROM_CART\"] = \"remove_from_cart\";\r\n    EventName[\"SCREEN_VIEW\"] = \"screen_view\";\r\n    EventName[\"SEARCH\"] = \"search\";\r\n    EventName[\"SELECT_CONTENT\"] = \"select_content\";\r\n    EventName[\"SELECT_ITEM\"] = \"select_item\";\r\n    EventName[\"SELECT_PROMOTION\"] = \"select_promotion\";\r\n    /** @deprecated */\r\n    EventName[\"SET_CHECKOUT_OPTION\"] = \"set_checkout_option\";\r\n    EventName[\"SHARE\"] = \"share\";\r\n    EventName[\"SIGN_UP\"] = \"sign_up\";\r\n    EventName[\"TIMING_COMPLETE\"] = \"timing_complete\";\r\n    EventName[\"VIEW_CART\"] = \"view_cart\";\r\n    EventName[\"VIEW_ITEM\"] = \"view_item\";\r\n    EventName[\"VIEW_ITEM_LIST\"] = \"view_item_list\";\r\n    EventName[\"VIEW_PROMOTION\"] = \"view_promotion\";\r\n    EventName[\"VIEW_SEARCH_RESULTS\"] = \"view_search_results\";\r\n})(EventName || (EventName = {}));\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Logs an analytics event through the Firebase SDK.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\r\n * @param eventParams Analytics event parameters.\r\n */\r\nfunction logEvent(gtagFunction, analyticsId, eventName, eventParams, options) {\r\n    var params = eventParams || {};\r\n    if (!options || !options.global) {\r\n        params = __assign(__assign({}, eventParams), { 'send_to': analyticsId });\r\n    }\r\n    // Workaround for http://b/141370449 - third argument cannot be undefined.\r\n    gtagFunction(GtagCommand.EVENT, eventName, params || {});\r\n}\r\n// TODO: Brad is going to add `screen_name` to GA Gold config parameter schema\r\n/**\r\n * Set screen_name parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param screenName Screen name string to set.\r\n */\r\nfunction setCurrentScreen(gtagFunction, analyticsId, screenName, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(GtagCommand.SET, { 'screen_name': screenName });\r\n    }\r\n    else {\r\n        gtagFunction(GtagCommand.CONFIG, analyticsId, {\r\n            update: true,\r\n            'screen_name': screenName\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set user_id parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param id User ID string to set\r\n */\r\nfunction setUserId(gtagFunction, analyticsId, id, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(GtagCommand.SET, { 'user_id': id });\r\n    }\r\n    else {\r\n        gtagFunction(GtagCommand.CONFIG, analyticsId, {\r\n            update: true,\r\n            'user_id': id\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set all other user properties other than user_id and screen_name.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param properties Map of user properties to set\r\n */\r\nfunction setUserProperties(gtagFunction, analyticsId, properties, options) {\r\n    if (options && options.global) {\r\n        var flatProperties = {};\r\n        for (var _i = 0, _a = Object.keys(properties); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            // use dot notation for merge behavior in gtag.js\r\n            flatProperties[\"user_properties.\" + key] = properties[key];\r\n        }\r\n        gtagFunction(GtagCommand.SET, flatProperties);\r\n    }\r\n    else {\r\n        gtagFunction(GtagCommand.CONFIG, analyticsId, {\r\n            update: true,\r\n            'user_properties': properties\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set whether collection is enabled for this ID.\r\n *\r\n * @param enabled If true, collection is enabled for this ID.\r\n */\r\nfunction setAnalyticsCollectionEnabled(analyticsId, enabled) {\r\n    window[\"ga-disable-\" + analyticsId] = !enabled;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new Logger('@firebase/analytics');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Initialize the analytics instance in gtag.js by calling config command with fid.\r\n *\r\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\r\n * part of the `page_view` event that's sent during the initialization\r\n * @param app Firebase app\r\n * @param gtagCore The gtag function that's not wrapped.\r\n */\r\nfunction initializeGAId(app, installations, gtagCore) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var fid;\r\n        var _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, installations.getId()];\r\n                case 1:\r\n                    fid = _b.sent();\r\n                    // This command initializes gtag.js and only needs to be called once for the entire web app,\r\n                    // but since it is idempotent, we can call it multiple times.\r\n                    // We keep it together with other initialization logic for better code structure.\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    gtagCore('js', new Date());\r\n                    // It should be the first config command called on this GA-ID\r\n                    // Initialize this GA-ID and set FID on it using the gtag config API.\r\n                    gtagCore(GtagCommand.CONFIG, app.options[ANALYTICS_ID_FIELD], (_a = {},\r\n                        _a[GA_FID_KEY] = fid,\r\n                        // guard against developers accidentally setting properties with prefix `firebase_`\r\n                        _a[ORIGIN_KEY] = 'firebase',\r\n                        _a.update = true,\r\n                        _a));\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction insertScriptTag(dataLayerName) {\r\n    var script = document.createElement('script');\r\n    // We are not providing an analyticsId in the URL because it would trigger a `page_view`\r\n    // without fid. We will initialize ga-id using gtag (config) command together with fid.\r\n    script.src = GTAG_URL + \"?l=\" + dataLayerName;\r\n    script.async = true;\r\n    document.head.appendChild(script);\r\n}\r\n/** Get reference to, or create, global datalayer.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\")\r\n */\r\nfunction getOrCreateDataLayer(dataLayerName) {\r\n    // Check for existing dataLayer and create if needed.\r\n    var dataLayer = [];\r\n    if (Array.isArray(window[dataLayerName])) {\r\n        dataLayer = window[dataLayerName];\r\n    }\r\n    else {\r\n        window[dataLayerName] = dataLayer;\r\n    }\r\n    return dataLayer;\r\n}\r\n/**\r\n * Wraps a standard gtag function with extra code to wait for completion of\r\n * relevant initialization promises before sending requests.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer\r\n * @param initializedIdPromisesMap Map of gaIds to their initialization promises\r\n */\r\nfunction wrapGtag(gtagCore, initializedIdPromisesMap) {\r\n    return function (command, idOrNameOrParams, gtagParams) {\r\n        // If event, check that relevant initialization promises have completed.\r\n        if (command === GtagCommand.EVENT) {\r\n            var initializationPromisesToWaitFor = [];\r\n            // If there's a 'send_to' param, check if any ID specified matches\r\n            // a FID we have begun a fetch on.\r\n            if (gtagParams && gtagParams['send_to']) {\r\n                var gaSendToList = gtagParams['send_to'];\r\n                // Make it an array if is isn't, so it can be dealt with the same way.\r\n                if (!Array.isArray(gaSendToList)) {\r\n                    gaSendToList = [gaSendToList];\r\n                }\r\n                for (var _i = 0, gaSendToList_1 = gaSendToList; _i < gaSendToList_1.length; _i++) {\r\n                    var sendToId = gaSendToList_1[_i];\r\n                    var initializationPromise = initializedIdPromisesMap[sendToId];\r\n                    // Groups will not be in the map.\r\n                    if (initializationPromise) {\r\n                        initializationPromisesToWaitFor.push(initializationPromise);\r\n                    }\r\n                    else {\r\n                        // There is an item in 'send_to' that is not associated\r\n                        // directly with an FID, possibly a group.  Empty this array\r\n                        // and let it get populated below.\r\n                        initializationPromisesToWaitFor = [];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // This will be unpopulated if there was no 'send_to' field , or\r\n            // if not all entries in the 'send_to' field could be mapped to\r\n            // a FID. In these cases, wait on all pending initialization promises.\r\n            if (initializationPromisesToWaitFor.length === 0) {\r\n                for (var _a = 0, _b = Object.values(initializedIdPromisesMap); _a < _b.length; _a++) {\r\n                    var idPromise = _b[_a];\r\n                    initializationPromisesToWaitFor.push(idPromise);\r\n                }\r\n            }\r\n            // Run core gtag function with args after all relevant initialization\r\n            // promises have been resolved.\r\n            Promise.all(initializationPromisesToWaitFor)\r\n                // Workaround for http://b/141370449 - third argument cannot be undefined.\r\n                .then(function () {\r\n                return gtagCore(GtagCommand.EVENT, idOrNameOrParams, gtagParams || {});\r\n            })\r\n                .catch(function (e) { return logger.error(e); });\r\n        }\r\n        else if (command === GtagCommand.CONFIG) {\r\n            var initializationPromiseToWait = initializedIdPromisesMap[idOrNameOrParams] ||\r\n                Promise.resolve();\r\n            initializationPromiseToWait\r\n                .then(function () {\r\n                gtagCore(GtagCommand.CONFIG, idOrNameOrParams, gtagParams);\r\n            })\r\n                .catch(function (e) { return logger.error(e); });\r\n        }\r\n        else {\r\n            // SET command.\r\n            // Splitting calls for CONFIG and SET to make it clear which signature\r\n            // Typescript is checking.\r\n            gtagCore(GtagCommand.SET, idOrNameOrParams);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Creates global gtag function or wraps existing one if found.\r\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\r\n * 'event' calls that belong to the GAID associated with this Firebase instance.\r\n *\r\n * @param initializedIdPromisesMap Map of gaId to initialization promises.\r\n * @param dataLayerName Name of global GA datalayer array.\r\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified)\r\n */\r\nfunction wrapOrCreateGtag(initializedIdPromisesMap, dataLayerName, gtagFunctionName) {\r\n    // Create a basic core gtag function\r\n    var gtagCore = function () {\r\n        var _args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            _args[_i] = arguments[_i];\r\n        }\r\n        // Must push IArguments object, not an array.\r\n        window[dataLayerName].push(arguments);\r\n    };\r\n    // Replace it with existing one if found\r\n    if (window[gtagFunctionName] &&\r\n        typeof window[gtagFunctionName] === 'function') {\r\n        // @ts-ignore\r\n        gtagCore = window[gtagFunctionName];\r\n    }\r\n    window[gtagFunctionName] = wrapGtag(gtagCore, initializedIdPromisesMap);\r\n    return {\r\n        gtagCore: gtagCore,\r\n        wrappedGtag: window[gtagFunctionName]\r\n    };\r\n}\r\n/**\r\n * Returns first script tag in DOM matching our gtag url pattern.\r\n */\r\nfunction findGtagScriptOnPage() {\r\n    var scriptTags = window.document.getElementsByTagName('script');\r\n    for (var _i = 0, _a = Object.values(scriptTags); _i < _a.length; _i++) {\r\n        var tag = _a[_i];\r\n        if (tag.src && tag.src.includes(GTAG_URL)) {\r\n            return tag;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"no-ga-id\" /* NO_GA_ID */] = \"\\\"\" + ANALYTICS_ID_FIELD + \"\\\" field is empty in \" +\r\n        'Firebase config. Firebase Analytics ' +\r\n        'requires this field to contain a valid measurement ID.',\r\n    _a[\"already-exists\" /* ALREADY_EXISTS */] = 'A Firebase Analytics instance with the measurement ID ${id} ' +\r\n        ' already exists. ' +\r\n        'Only one Firebase Analytics instance can be created for each measurement ID.',\r\n    _a[\"already-initialized\" /* ALREADY_INITIALIZED */] = 'Firebase Analytics has already been initialized.' +\r\n        'settings() must be called before initializing any Analytics instance' +\r\n        'or it will have no effect.',\r\n    _a[\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */] = 'Firebase Analytics Interop Component failed to instantiate',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory('analytics', 'Analytics', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Maps gaId to FID fetch promises.\r\n */\r\nvar initializedIdPromisesMap = {};\r\n/**\r\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\r\n */\r\nvar dataLayerName = 'dataLayer';\r\n/**\r\n * Name for window global gtag function used by GA: defaults to 'gtag'.\r\n */\r\nvar gtagName = 'gtag';\r\n/**\r\n * Reproduction of standard gtag function or reference to existing\r\n * gtag function on window object.\r\n */\r\nvar gtagCoreFunction;\r\n/**\r\n * Wrapper around gtag function that ensures FID is sent with all\r\n * relevant event and config calls.\r\n */\r\nvar wrappedGtagFunction;\r\n/**\r\n * Flag to ensure page initialization steps (creation or wrapping of\r\n * dataLayer and gtag script) are only run once per page load.\r\n */\r\nvar globalInitDone = false;\r\n/**\r\n * For testing\r\n */\r\nfunction resetGlobalVars(newGlobalInitDone, newGaInitializedPromise) {\r\n    if (newGlobalInitDone === void 0) { newGlobalInitDone = false; }\r\n    if (newGaInitializedPromise === void 0) { newGaInitializedPromise = {}; }\r\n    globalInitDone = newGlobalInitDone;\r\n    initializedIdPromisesMap = newGaInitializedPromise;\r\n    dataLayerName = 'dataLayer';\r\n    gtagName = 'gtag';\r\n}\r\n/**\r\n * For testing\r\n */\r\nfunction getGlobalVars() {\r\n    return {\r\n        initializedIdPromisesMap: initializedIdPromisesMap\r\n    };\r\n}\r\n/**\r\n * This must be run before calling firebase.analytics() or it won't\r\n * have any effect.\r\n * @param options Custom gtag and dataLayer names.\r\n */\r\nfunction settings(options) {\r\n    if (globalInitDone) {\r\n        throw ERROR_FACTORY.create(\"already-initialized\" /* ALREADY_INITIALIZED */);\r\n    }\r\n    if (options.dataLayerName) {\r\n        dataLayerName = options.dataLayerName;\r\n    }\r\n    if (options.gtagName) {\r\n        gtagName = options.gtagName;\r\n    }\r\n}\r\nfunction factory(app, installations) {\r\n    var analyticsId = app.options[ANALYTICS_ID_FIELD];\r\n    if (!analyticsId) {\r\n        throw ERROR_FACTORY.create(\"no-ga-id\" /* NO_GA_ID */);\r\n    }\r\n    if (initializedIdPromisesMap[analyticsId] != null) {\r\n        throw ERROR_FACTORY.create(\"already-exists\" /* ALREADY_EXISTS */, {\r\n            id: analyticsId\r\n        });\r\n    }\r\n    if (!globalInitDone) {\r\n        // Steps here should only be done once per page: creation or wrapping\r\n        // of dataLayer and global gtag function.\r\n        // Detect if user has already put the gtag <script> tag on this page.\r\n        if (!findGtagScriptOnPage()) {\r\n            insertScriptTag(dataLayerName);\r\n        }\r\n        getOrCreateDataLayer(dataLayerName);\r\n        var _a = wrapOrCreateGtag(initializedIdPromisesMap, dataLayerName, gtagName), wrappedGtag = _a.wrappedGtag, gtagCore = _a.gtagCore;\r\n        wrappedGtagFunction = wrappedGtag;\r\n        gtagCoreFunction = gtagCore;\r\n        globalInitDone = true;\r\n    }\r\n    // Async but non-blocking.\r\n    initializedIdPromisesMap[analyticsId] = initializeGAId(app, installations, gtagCoreFunction);\r\n    var analyticsInstance = {\r\n        app: app,\r\n        logEvent: function (eventName, eventParams, options) {\r\n            return logEvent(wrappedGtagFunction, analyticsId, eventName, eventParams, options);\r\n        },\r\n        setCurrentScreen: function (screenName, options) {\r\n            return setCurrentScreen(wrappedGtagFunction, analyticsId, screenName, options);\r\n        },\r\n        setUserId: function (id, options) {\r\n            return setUserId(wrappedGtagFunction, analyticsId, id, options);\r\n        },\r\n        setUserProperties: function (properties, options) {\r\n            return setUserProperties(wrappedGtagFunction, analyticsId, properties, options);\r\n        },\r\n        setAnalyticsCollectionEnabled: function (enabled) {\r\n            return setAnalyticsCollectionEnabled(analyticsId, enabled);\r\n        }\r\n    };\r\n    return analyticsInstance;\r\n}\n\nvar name = \"@firebase/analytics\";\nvar version = \"0.3.6\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Analytics.\r\n */\r\nvar ANALYTICS_TYPE = 'analytics';\r\nfunction registerAnalytics(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(ANALYTICS_TYPE, function (container) {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factory(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */).setServiceProps({\r\n        settings: settings,\r\n        EventName: EventName\r\n    }));\r\n    instance.INTERNAL.registerComponent(new Component('analytics-internal', internalFactory, \"PRIVATE\" /* PRIVATE */));\r\n    instance.registerVersion(name, version);\r\n    function internalFactory(container) {\r\n        try {\r\n            var analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\r\n            return {\r\n                logEvent: analytics.logEvent\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ERROR_FACTORY.create(\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */, {\r\n                reason: e\r\n            });\r\n        }\r\n    }\r\n}\r\nregisterAnalytics(firebase);\n\nexport { factory, getGlobalVars, registerAnalytics, resetGlobalVars, settings };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}
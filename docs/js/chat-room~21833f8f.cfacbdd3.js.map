{"version":3,"sources":["webpack:///./src/components/VPage/VPage.tsx","webpack:///./src/components/ChatFrame/ChatFrame.tsx","webpack:///./src/components/ChatFrameHeader/ChatFrameHeader.tsx","webpack:///./src/components/ChatFrameBody/ChatFrameBody.tsx","webpack:///./src/components/VBadge/VBadge.tsx","webpack:///./src/components/MessageList/MessageList.tsx","webpack:///./src/utils/datetimeFormatter/index.ts","webpack:///./src/components/MessageListItemUser/MessageListItemUser.tsx","webpack:///./src/components/MessageListItemSystem/MessageListItemSystem.tsx","webpack:///./src/components/MessageListItemDiscriminator/MessageListItemDiscriminator.tsx","webpack:///./src/components/VFile/VFile.tsx","webpack:///./src/types/common.ts","webpack:///./src/components/ChatFrameInputPanel/ChatFrameInputPanel.tsx","webpack:///./src/components/ChatRoomPeoplePopup/ChatRoomPeoplePopup.tsx","webpack:///./src/views/chat-room/PageChatRoom.tsx"],"names":["VPage","this","$slots","default","ChatFrame","ChatFrameHeader","ChatFrameBody","VBadge","messageList","map","message","id","$scopedSlots","Array","formatDatetime","value","format","extend","locale","imageLoaded","imageErrored","$emit","handleImageLoaded","isMyMessage","senderInitial","sender","name","isText","content","isImage","handleImageError","spinner_color_light","createdAt","contentType","ContentType","Text","Image","type","Object","required","Boolean","Component","isSystemMessage","$listeners","Type","System","slice","apply","fileElement","files","reset","disabled","$attrs","onChange","inheritAttrs","KeyCode","sendButtonEnabled","$event","target","trim","length","keyCode","Enter","preventDefault","altKey","textareaElement","emitText","focusInput","textMessage","focus","menus","handleInput","enter","handleKeyDown","handleSendClick","people","user","sendMessageQueue","Promise","resolve","isScrollAtEnd","peoplePopupShowed","$router","replace","ChatRoomList","requestDialog","dialogType","INVITATION","params","handleOk","handleSendInvitationOk","uid","sendInvitation","profile","chatFrameBody","$el","scrollTop","clientHeight","text","sendMessage","focusTextarea","then","dispatchMessage","scrollElement","messageElement","Math","abs","newRoom","$nextTick","inputPanel","to","from","next","vm","enterRoom","roomId","MESSAGE","closeText","okText","leaveRoom","handlePeopleNumberClick","room","handleLeaveClick","handleChatFrameBodyScroll","messages","handleNewMessageLoaded","handleTextSubmitted","handleImageSubmitted","handleInvitationMenuClick","WithGlobalSpinner"],"mappings":"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","file":"js/chat-room~21833f8f.cfacbdd3.js","sourcesContent":["import { Component, Vue } from 'vue-property-decorator'\nimport './VPage.scss'\n\n@Component\nexport default class VPage extends Vue {\n  render() {\n    return (\n      <div class=\"page\">\n        {this.$slots.default}\n      </div>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-48dfa17e/VPage.tsx\" });","import { Component, Vue } from 'vue-property-decorator'\n\nimport './ChatFrame.scss'\nimport VPage from '@/components/VPage/VPage'\n\n@Component\nexport default class ChatFrame extends Vue {\n  render() {\n    return (\n      <VPage>\n        {this.$slots.default}\n      </VPage>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-79ac8c1e/ChatFrame.tsx\" });","import { Component, Vue } from 'vue-property-decorator'\nimport './ChatFrameHeader.scss'\n\n@Component\nexport default class ChatFrameHeader extends Vue {\n  render() {\n    return (\n      <div class=\"chat-frame-header\">\n        {this.$slots.default}\n      </div>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-49b2da78/ChatFrameHeader.tsx\" });","import { Component, Vue } from 'vue-property-decorator'\n\nimport './ChatFrameBody.scss'\n\n@Component\nexport default class ChatFrameBody extends Vue {\n  render() {\n    return (\n      <div class=\"chat-frame-body\">\n        {this.$slots.default}\n      </div>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-36234bbc/ChatFrameBody.tsx\" });","import { Component, Vue } from 'vue-property-decorator'\nimport './VBadge.scss'\n\n@Component\nexport default class VBadge extends Vue {\n  render() {\n    return (\n      <span class=\"badge\">\n        {this.$slots.default}\n      </span>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-39b64f5c/VBadge.tsx\" });","import * as tsx from 'vue-tsx-support'\nimport { Component, Prop } from 'vue-property-decorator'\nimport './MessageList.scss'\nimport { Message } from '@/services/backend'\n\ninterface MessageListProps {\n  messageList: Message[]\n}\n\ninterface MessageListSlots {\n  default: { message: Message };\n}\n\n@Component\nexport default class MessageList extends tsx.Component<MessageListProps, {}, MessageListSlots> {\n  @Prop(Array)\n  private readonly messageList!: Message[]\n\n  render() {\n    return (\n      <ul class=\"message-list\">\n        {this.messageList.map(message => (\n          <li\n            key={message.id}\n            class=\"message-list-item\"\n          >\n            {this.$scopedSlots.default({ message })}\n          </li>\n        ))}\n      </ul>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-303e3184/MessageList.tsx\" });","import dayjs from 'dayjs'\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat'\nimport 'dayjs/locale/ko'\n\ndayjs.extend(LocalizedFormat)\ndayjs.locale('ko')\n\nfunction formatDatetime(value: number) {\n  return dayjs(value).format('LL A hh:mm:ss')\n}\n\nexport { formatDatetime }\n","import { Component, Prop, Vue } from 'vue-property-decorator'\n\nimport './MessageListItemUser.scss'\nimport { formatDatetime } from '@/utils/datetimeFormatter'\nimport { Message } from '@/services/backend'\n\n@Component\nexport default class MessageListItemUser extends Vue {\n  @Prop({ type: Object, required: true })\n  private readonly message!: Message\n\n  @Prop(Boolean)\n  private readonly isMyMessage!: boolean\n\n  private imageLoaded = false\n\n  private imageErrored = false\n\n  private get senderInitial() {\n    return this.message.sender.name[0]\n  }\n\n  private get isText() {\n    return this.message.contentType === Message.ContentType.Text\n  }\n\n  private get isImage() {\n    return this.message.contentType === Message.ContentType.Image\n  }\n\n  private get content() {\n    return this.message.content || null as any\n  }\n\n  private handleImageLoaded() {\n    this.imageLoaded = true\n    this.$emit('messageLoaded', this.message)\n  }\n\n  private handleImageError() {\n    this.imageErrored = true\n    this.handleImageLoaded()\n  }\n\n  mounted() {\n    this.$emit('messageLoaded', this.message)\n  }\n\n  render() {\n    return (\n      <div\n        staticClass=\"message-list-item-user\"\n        class={{ 'message-list-item-user-me': this.isMyMessage }}\n      >\n        {!this.isMyMessage &&\n        <div class=\"message-list-item-user-initial\">\n          {this.senderInitial}\n        </div>\n        }\n        <div\n          staticClass=\"message-list-item-user-text-box\"\n          class={`message-list-item-user-text-box_align_${this.isMyMessage ? 'right' : 'left'}`}\n        >\n          {!this.isMyMessage &&\n          <div class=\"message-list-item-user-sender\">\n            {this.message.sender.name}\n          </div>\n          }\n          <div\n            staticClass=\"message-list-item-user-balloon\"\n            class={`message-list-item-user-balloon_align_${this.isMyMessage ? 'right' : 'left'}`}\n          >\n            <div\n              staticClass=\"message-list-item-user-balloon__arrow\"\n              class={`message-list-item-user-balloon__arrow_direction_${this.isMyMessage ? 'right' : 'left'}`}\n            />\n            <div\n              staticClass=\"message-list-item-user-balloon__content\"\n              class={{ 'message-list-item-user-balloon__content_color_yellow': this.isMyMessage }}\n            >\n              {(\n                this.isText &&\n                <pre class=\"message-list-item-user-balloon__content-text\">{this.message.content}</pre>\n              ) || (\n                this.isImage &&\n                <div class=\"message-list-item-user-balloon__content-image-wrapper\">\n                  {!this.imageErrored\n                    ? <img\n                      class=\"message-list-item-user-balloon__content-image\"\n                      src={this.content}\n                      alt=\"\"\n                      on={{\n                        '~load': this.handleImageLoaded,\n                        '~error': this.handleImageError,\n                      }}\n                    />\n                    : '이미지 불러오기 실패'\n                  }\n                  {!this.imageLoaded &&\n                  <div\n                    staticClass=\"absolute spinner\"\n                    class={{ spinner_color_light: this.isMyMessage }}\n                  />\n                  }\n                </div>\n              )}\n              <span\n                staticClass=\"message-list-item-user-balloon__datetime\"\n                class={{ 'message-list-item-user-balloon__datetime_align_right': this.isMyMessage }}\n              >{formatDatetime(this.message.createdAt)}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-2f2f4d0c/MessageListItemUser.tsx\" });","import { Component, Prop, Vue } from 'vue-property-decorator'\nimport './MessageListItemSystem.scss'\nimport { Message } from '@/services/backend'\n\n@Component\nexport default class MessageListItemSystem extends Vue {\n  @Prop({ type: Object, required: true })\n  private readonly message!: Message\n\n  mounted() {\n    this.$emit('messageLoaded', this.message)\n  }\n\n  render() {\n    return (\n      <div class=\"message-list-item-system\">\n        {this.message.content}\n      </div>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-0fceba42/MessageListItemSystem.tsx\" });","import * as tsx from 'vue-tsx-support'\nimport { Component, Prop } from 'vue-property-decorator'\n\nimport MessageListItemUser from '@/components/MessageListItemUser/MessageListItemUser'\nimport MessageListItemSystem from '@/components/MessageListItemSystem/MessageListItemSystem'\nimport { Message } from '@/services/backend'\n\ninterface MessageListItemDiscriminatorProps {\n  message: Message;\n  isMyMessage: boolean;\n}\n\ninterface MessageListItemDiscriminatorEvents {\n  onMessageLoaded(message: Message): void\n}\n\n@Component\nexport default class MessageListItemDiscriminator extends tsx.Component<MessageListItemDiscriminatorProps, MessageListItemDiscriminatorEvents> {\n  @Prop({ type: Object, required: true })\n  private readonly message!: Message\n\n  @Prop(Boolean)\n  private readonly isMyMessage!: boolean\n\n  private get isSystemMessage() {\n    return this.message.type === Message.Type.System\n  }\n\n  render() {\n    const Component = this.isSystemMessage ? MessageListItemSystem : MessageListItemUser\n    return (\n      <Component\n        props={{\n          message: this.message,\n          isMyMessage: this.isMyMessage,\n        }}\n        on={this.$listeners}\n      />\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-ece3839c/MessageListItemDiscriminator.tsx\" });","import { Component, Ref } from 'vue-property-decorator'\nimport * as tsx from 'vue-tsx-support'\n\nimport './VFile.scss'\n\ninterface VFileEvents {\n  onSelectFile(fileList: File[]): void\n}\n\n@Component({\n  inheritAttrs: false,\n})\nexport default class VFile extends tsx.Component<{}, VFileEvents> {\n  @Ref()\n  private readonly fileElement!: HTMLInputElement\n\n  private onChange() {\n    this.$emit('selectFile', [].slice.apply(this.fileElement.files))\n    this.reset()\n  }\n\n  reset() {\n    this.fileElement.value = ''\n  }\n\n  render() {\n    return (\n      <label staticClass=\"file\" class={{ disabled: this.$attrs.disabled }}>\n        {this.$slots.default}\n        <input\n          attrs={this.$attrs}\n          ref=\"fileElement\"\n          type=\"file\"\n          hidden\n          onChange={this.onChange}\n        />\n      </label>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-9c96f6d0/VFile.tsx\" });","type RouteEnterNext<T> = (next: (vm: T) => any) => void\n\ntype RouteNext = (next?: boolean) => void\n\ntype RouterLinkSlotProps = {\n  href: string;\n  navigate: () => void\n}\n\ntype Dictionary<T> = {\n  [key: string]: T\n}\n\nenum KeyCode {\n  Enter = 13,\n}\n\nexport {\n  RouteEnterNext,\n  RouteNext,\n  RouterLinkSlotProps,\n  KeyCode,\n  Dictionary,\n}\n","import * as tsx from 'vue-tsx-support'\nimport { modifiers } from 'vue-tsx-support'\nimport { Component, Prop, Ref } from 'vue-property-decorator'\n\nimport './ChatFrameInputPanel.scss'\nimport VButton from '@/components/VButton/VButton'\nimport { SyntheticEvent, TextareaHTMLAttributes } from 'vue-tsx-support/types/dom'\nimport { KeyCode } from '@/types/common'\n\ninterface ChatFrameInputPanelProps {\n  disabled: boolean;\n}\n\ninterface ChatFrameInputPanelEvents {\n  onTextSubmitted(text: string): void;\n}\n\ninterface ChatFrameInputPanelSlots {\n  menus: { focusInput: () => void; disabled: boolean; };\n}\n\n@Component\nexport default class ChatFrameInputPanel extends tsx.Component<ChatFrameInputPanelProps, ChatFrameInputPanelEvents, ChatFrameInputPanelSlots> {\n  @Ref()\n  private readonly textareaElement!: HTMLTextAreaElement\n\n  @Prop()\n  private readonly disabled!: boolean\n\n  private sendButtonEnabled = false\n\n  private handleInput($event: SyntheticEvent<TextareaHTMLAttributes>) {\n    this.sendButtonEnabled = `${$event.target.value}`.trim().length > 0\n  }\n\n  private handleKeyDown($event: KeyboardEvent) {\n    if ($event.keyCode === KeyCode.Enter) {\n      $event.preventDefault()\n    }\n\n    if (!this.sendButtonEnabled || $event.keyCode !== KeyCode.Enter) {\n      return\n    }\n\n    if ($event.altKey) {\n      this.textareaElement.value += '\\n'\n    } else {\n      this.emitText()\n    }\n  }\n\n  private handleSendClick() {\n    if (!this.sendButtonEnabled) {\n      return\n    }\n    this.emitText()\n    this.focusInput()\n  }\n\n  private emitText() {\n    const textMessage = this.textareaElement.value\n    if (textMessage) {\n      this.$emit('textSubmitted', textMessage)\n      this.textareaElement.value = ''\n      this.sendButtonEnabled = false\n    }\n  }\n\n  public focusInput() {\n    this.textareaElement.focus()\n  }\n\n  render() {\n    return (\n      <div class=\"chat-frame-input-panel\">\n        <div class=\"chat-frame-input-panel__menu\">\n          {this.$scopedSlots.menus({ focusInput: this.focusInput, disabled: this.disabled })}\n        </div>\n        <div class=\"chat-frame-input-panel__input-area\">\n          <label\n            for=\"inputBox\"\n            class=\"sr-only\"\n          >입력상자</label>\n          <textarea\n            id=\"inputBox\"\n            ref=\"textareaElement\"\n            class=\"chat-frame-input-panel__input\"\n            disabled={this.disabled}\n            onInput={this.handleInput}\n            onKeydown={modifiers.enter(this.handleKeyDown)}\n          />\n          <div class=\"chat-frame-input-panel__send-button-container\">\n            <VButton\n              type=\"submit\"\n              class=\"chat-frame-input-panel__send-button button button_yellow\"\n              disabled={this.disabled || !this.sendButtonEnabled}\n              onClick={this.handleSendClick}\n            >\n              전송\n            </VButton>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-26ed4212/ChatFrameInputPanel.tsx\" });","import * as tsx from 'vue-tsx-support'\nimport { Component, Prop } from 'vue-property-decorator'\nimport { ChatUser } from '@/services/backend'\n\nimport './ChatRoomPeoplePopup.scss'\n\ninterface Props {\n  people: ChatUser[];\n}\n\n@Component\nexport default class ChatRoomPeoplePopup extends tsx.Component<Props> {\n  @Prop(Array)\n  private readonly people!: ChatUser[]\n\n  render() {\n    return (\n      <div staticClass=\"chat-room-popup\">\n        <span staticClass=\"chat-room-popup__arrow\" />\n        <ul staticClass=\"chat-room-popup__body\">\n          {this.people.map(user => (\n            <li staticClass=\"chat-room-popup__user-name\">\n              🗣 {user.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-1f199170/ChatRoomPeoplePopup.tsx\" });","import { Component, Ref, Vue, Watch } from 'vue-property-decorator'\nimport { Action, Getter } from 'vuex-class'\nimport { Route } from 'vue-router'\n\nimport './PageChatRoom.scss'\nimport { GET_MESSAGES, GET_PEOPLE, GET_ROOM_INFO } from '@/store/chat/getters.type'\nimport RouteName from '@/router/route.name'\nimport VBadge from '@/components/VBadge/VBadge'\nimport VButton from '@/components/VButton/VButton'\nimport MessageList from '@/components/MessageList/MessageList'\nimport MessageListItemDiscriminator\n  from '@/components/MessageListItemDiscriminator/MessageListItemDiscriminator'\nimport VFile from '@/components/VFile/VFile'\nimport ChatFrame from '@/components/ChatFrame/ChatFrame'\nimport ChatFrameHeader from '@/components/ChatFrameHeader/ChatFrameHeader'\nimport ChatFrameBody from '@/components/ChatFrameBody/ChatFrameBody'\nimport ChatFrameInputPanel from '@/components/ChatFrameInputPanel/ChatFrameInputPanel'\nimport {\n  DISPATCH_MESSAGE,\n  ENTER_ROOM,\n  LEAVE_ROOM,\n  SEND_INVITATION,\n} from '@/store/chat/actions.type'\nimport { WithGlobalSpinner } from '@/decorators/WithGlobalSpinner'\nimport { RouteEnterNext, RouteNext } from '@/types/common'\nimport { GET_PROFILE } from '@/store/session/getters.type'\nimport { ChatUser, Message, Profile, Room } from '@/services/backend'\nimport { DialogRequestParams } from '@/store/dialog'\nimport { DialogType, InvitationDialog } from '@/store/dialog/types'\nimport ChatRoomPeoplePopup from '@/components/ChatRoomPeoplePopup/ChatRoomPeoplePopup'\nimport { REQUEST_DIALOG } from '@/store/dialog/actions.type'\n\n@Component\nexport default class PageChatRoom extends Vue {\n  @Ref()\n  readonly chatFrameBody!: ChatFrameBody\n\n  @Ref()\n  readonly messageList!: MessageList\n\n  @Ref()\n  readonly inputPanel!: ChatFrameInputPanel\n\n  @Getter(GET_PROFILE)\n  readonly profile!: Profile\n\n  @Getter(GET_ROOM_INFO)\n  readonly room!: Room\n\n  @Getter(GET_PEOPLE)\n  readonly people!: ChatUser[]\n\n  @Getter(GET_MESSAGES)\n  readonly messages!: Message[]\n\n  @Action(ENTER_ROOM)\n  readonly enterRoom!: (roomId: string) => Promise<void>\n\n  @Action(LEAVE_ROOM)\n  readonly leaveRoom!: () => Promise<void>\n\n  @Action(DISPATCH_MESSAGE)\n  readonly dispatchMessage!: (message: Message.Params) => Promise<void>\n\n  @Action(SEND_INVITATION)\n  readonly sendInvitation!: (uid: string) => Promise<void>\n\n  @Action(REQUEST_DIALOG)\n  readonly requestDialog!: (params: DialogRequestParams) => void\n\n  sendMessageQueue: Promise<void> = Promise.resolve()\n\n  isScrollAtEnd = true\n\n  peoplePopupShowed = false\n\n  handleLeaveClick() {\n    this.$router.replace({ name: RouteName.ChatRoomList })\n  }\n\n  handleInvitationMenuClick() {\n    this.requestDialog({\n      dialogType: DialogType.INVITATION,\n      params: {\n        handleOk: this.handleSendInvitationOk,\n      } as InvitationDialog.Params,\n    })\n  }\n\n  @WithGlobalSpinner\n  handleSendInvitationOk(uid: string) {\n    return this.sendInvitation(uid)\n  }\n\n  handleNewMessageLoaded(message: Message) {\n    const isMyMessage = message.sender.id === this.profile.uid\n    if (isMyMessage || this.isScrollAtEnd) {\n      this.chatFrameBody.$el.scrollTop = this.messageList.$el.clientHeight - this.chatFrameBody.$el.clientHeight\n    }\n  }\n\n  handleTextSubmitted(text: string) {\n    this.sendMessage({ content: text, contentType: Message.ContentType.Text })\n  }\n\n  handleImageSubmitted(files: File[], focusTextarea: () => void) {\n    this.sendMessage({ content: files, contentType: Message.ContentType.Image })\n    focusTextarea()\n  }\n\n  sendMessage({\n    content,\n    contentType,\n  }: {\n    content: string | File[];\n    contentType: Message.ContentType;\n  }) {\n    this.sendMessageQueue = this.sendMessageQueue.then(() => this.dispatchMessage({\n      content,\n      contentType,\n    }))\n  }\n\n  handleChatFrameBodyScroll() {\n    const scrollElement = this.chatFrameBody.$el\n    const messageElement = this.messageList.$el\n    this.isScrollAtEnd = Math.abs((scrollElement.scrollTop + scrollElement.clientHeight) - messageElement.clientHeight) < 2\n  }\n\n  handlePeopleNumberClick() {\n    this.peoplePopupShowed = !this.peoplePopupShowed\n  }\n\n  @Watch('room')\n  async onRoomChanged(newRoom: Room) {\n    if (newRoom.id) {\n      await this.$nextTick()\n      this.inputPanel.focusInput()\n    }\n  }\n\n  @WithGlobalSpinner\n  beforeRouteEnter(to: Route, from: Route, next: RouteEnterNext<PageChatRoom>) {\n    return new Promise(resolve => {\n      next(async (vm) => {\n        try {\n          await vm.enterRoom(to.params.roomId)\n        } catch (e) {\n          vm.requestDialog({\n            dialogType: DialogType.MESSAGE,\n            params: {\n              message: '🚧 채팅방 연결중 오류가 발생했습니다.',\n              closeText: '',\n              okText: '채팅방 목록으로 이동',\n              handleOk: () => {\n                vm.$router.replace({ name: RouteName.ChatRoomList })\n              },\n            },\n          })\n        }\n        resolve()\n      })\n    })\n  }\n\n  @WithGlobalSpinner\n  async beforeRouteUpdate(to: Route, from: Route, next: RouteNext) {\n    // 다른 채팅방으로 이동\n    try {\n      await this.leaveRoom()\n      await this.enterRoom(to.params.roomId)\n      next()\n    } catch {\n      this.requestDialog({\n        dialogType: DialogType.MESSAGE,\n        params: {\n          message: '🚧 채팅방 연결중 오류가 발생했습니다.',\n          closeText: '',\n          okText: '닫기',\n        },\n      })\n    }\n  }\n\n  async beforeRouteLeave(to: Route, from: Route, next: RouteNext) {\n    // 채팅방 목록으로 이동\n    this.leaveRoom()\n    next()\n  }\n\n  render() {\n    return (\n      <ChatFrame>\n        <ChatFrameHeader class=\"chat-room__header\">\n          <div class=\"chat-room__title\">\n            <div>\n              <VButton onClick={this.handlePeopleNumberClick}>\n                <VBadge class=\"chat-room__title-badge\">\n                  💬 {this.people.length}\n                </VBadge>\n              </VButton>\n              {this.peoplePopupShowed && <ChatRoomPeoplePopup people={this.people} />}\n            </div>\n            <h4 class=\"chat-room__title-text\">\n              {this.room.name}\n            </h4>\n          </div>\n          <VButton\n            class=\"chat-room__leave-button\"\n            variant=\"yellow\"\n            onClick={this.handleLeaveClick}\n          >\n            나가기\n          </VButton>\n        </ChatFrameHeader>\n        <ChatFrameBody ref=\"chatFrameBody\" nativeOnScroll={this.handleChatFrameBodyScroll}>\n          <MessageList\n            ref=\"messageList\"\n            messageList={this.messages}\n            scopedSlots={{\n              default: ({ message }: { message: Message }) => (\n                <MessageListItemDiscriminator\n                  key={message.id}\n                  message={message}\n                  isMyMessage={message.sender.id === this.profile.uid}\n                  onMessageLoaded={this.handleNewMessageLoaded}\n                />\n              ),\n            }}\n          />\n        </ChatFrameBody>\n        <ChatFrameInputPanel\n          ref=\"inputPanel\"\n          onTextSubmitted={this.handleTextSubmitted}\n          disabled={!this.room.id}\n          scopedSlots={{\n            menus: ({ focusInput, disabled }: { focusInput: () => void, disabled: boolean }) => (\n              [\n                <VFile\n                  class=\"chat-frame-input-panel__menu-item\"\n                  accept=\"image/*\"\n                  disabled={disabled}\n                  onSelectFile={$event => this.handleImageSubmitted($event, focusInput)}\n                >\n                  사진 올리기\n                </VFile>,\n                <VButton\n                  class=\"chat-frame-input-panel__menu-item\"\n                  disabled={disabled}\n                  onClick={this.handleInvitationMenuClick}\n                >\n                  초대\n                </VButton>,\n              ]\n            ),\n          }}\n        >\n        </ChatFrameInputPanel>\n      </ChatFrame>\n    )\n  }\n}\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"/Users/1100392/workspaces/vue-firebase-chat/node_modules/vue-jsx-hot-loader/src/api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-cc6da9c4/PageChatRoom.tsx\" });"],"sourceRoot":""}